{"helper.ts":"import { EventRenderedArgs, View } from '@syncfusion/ej2-schedule';\r\n\r\n/**\r\n * Schedule util\r\n */\r\n\r\nexport function applyCategoryColor(args: EventRenderedArgs, currentView: View): void {\r\n    let categoryColor: string = args.data.CategoryColor as string;\r\n    if (!args.element || !categoryColor) {\r\n        return;\r\n    }\r\n    if (currentView === 'Agenda') {\r\n        (args.element.firstChild as HTMLElement).style.borderLeftColor = categoryColor;\r\n    } else {\r\n        args.element.style.backgroundColor = categoryColor;\r\n    }\r\n}\r\n\r\nexport function generateObject(start: number = new Date(2017, 6, 1).getTime(), end: number = new Date(2018, 6, 31).getTime()): Object[] {\r\n    let data: Object[] = [];\r\n    let names: string[] = [\r\n        'Story Time for Kids', 'Camping with Turtles', 'Wildlife Warriors', 'Parrot Talk', 'Birds of Prey', 'Croco World',\r\n        'Venomous Snake Hunt', 'Face Painting & Drawing events', 'Pony Rides', 'Feed the Giants', 'Jungle Treasure Hunt',\r\n        'Endangered Species Program', 'Black Cockatoos Playtime', 'Walk with Jungle King', 'Trained Climbers', 'Playtime with Chimpanzees',\r\n        'Meet a small Mammal', 'Amazon Fish Feeding', 'Elephant Ride'\r\n    ];\r\n    let dayCount: number = 1000 * 60 * 60;\r\n    for (let a: number = start, id: number = 1; a < end; a += (dayCount * 24) * 2) {\r\n        let count: number = Math.floor((Math.random() * 9) + 1);\r\n        for (let b: number = 0; b < count; b++) {\r\n            let hour: number = Math.floor(Math.random() * 100) % 24;\r\n            let minutes: number = Math.round((Math.floor(Math.random() * 100) % 60) / 5) * 5;\r\n            let nCount: number = Math.floor(Math.random() * names.length);\r\n            let startDate: Date = new Date(new Date(a).setHours(hour, minutes));\r\n            let endDate: Date = new Date(startDate.getTime() + (dayCount * 2.5));\r\n            data.push({\r\n                Id: id,\r\n                Subject: names[nCount],\r\n                StartTime: startDate,\r\n                EndTime: endDate,\r\n                IsAllDay: (id % 10) ? false : true\r\n            });\r\n            id++;\r\n        }\r\n    }\r\n    return data;\r\n}\r\n\r\nexport function getReadOnlyEventsData(): Object[] {\r\n    let msPerDay: number = 86400000;\r\n    let msPerHour: number = 3600000;\r\n    let currentTime: number = new Date().setMinutes(0, 0, 0);\r\n    let readonlyEventsData: Object[] = [\r\n        {\r\n            Id: 1,\r\n            Subject: 'Project Workflow Analysis',\r\n            StartTime: new Date(currentTime + msPerDay * -2 + msPerHour * 2),\r\n            EndTime: new Date(currentTime + msPerDay * -2 + msPerHour * 4),\r\n            IsReadonly: true\r\n        }, {\r\n            Id: 2,\r\n            Subject: 'Project Requirement Planning',\r\n            StartTime: new Date(currentTime + msPerDay * -1 + msPerHour * 2),\r\n            EndTime: new Date(currentTime + msPerDay * -1 + msPerHour * 4),\r\n            IsReadonly: true\r\n        }, {\r\n            Id: 3,\r\n            Subject: 'Meeting with Developers',\r\n            StartTime: new Date(currentTime + msPerDay * -1 + msPerHour * -3),\r\n            EndTime: new Date(currentTime + msPerDay * -1 + msPerHour * -1),\r\n            IsReadonly: true\r\n        }, {\r\n            Id: 4,\r\n            Subject: 'Team Fun Activities',\r\n            StartTime: new Date(currentTime + msPerHour * -4),\r\n            EndTime: new Date(currentTime + msPerHour * -2),\r\n            IsReadonly: true\r\n        }, {\r\n            Id: 5,\r\n            Subject: 'Quality Analysis',\r\n            StartTime: new Date(currentTime + msPerHour * 1),\r\n            EndTime: new Date(currentTime + msPerHour * 3),\r\n            IsReadonly: false\r\n        }, {\r\n            Id: 6,\r\n            Subject: 'Customer meeting â€“ John Mackenzie',\r\n            StartTime: new Date(currentTime + msPerHour * 5),\r\n            EndTime: new Date(currentTime + msPerHour * 6),\r\n            IsReadonly: false\r\n        }, {\r\n            Id: 7,\r\n            Subject: 'Meeting with Core team',\r\n            StartTime: new Date(currentTime + msPerHour * 9),\r\n            EndTime: new Date(currentTime + msPerHour * 10),\r\n            IsReadonly: false\r\n        }, {\r\n            Id: 8,\r\n            Subject: 'Project Review',\r\n            StartTime: new Date(currentTime + msPerDay * 1 + msPerHour * 3),\r\n            EndTime: new Date(currentTime + msPerDay * 1 + msPerHour * 5),\r\n            IsReadonly: false\r\n        }, {\r\n            Id: 9,\r\n            Subject: 'Project demo meeting with Andrew',\r\n            StartTime: new Date(currentTime + msPerDay * 1 + msPerHour * -4),\r\n            EndTime: new Date(currentTime + msPerDay * 1 + msPerHour * -3),\r\n            IsReadonly: false\r\n        }, {\r\n            Id: 10,\r\n            Subject: 'Online Hosting of Project',\r\n            StartTime: new Date(currentTime + msPerDay * 2 + msPerHour * 4),\r\n            EndTime: new Date(currentTime + msPerDay * 2 + msPerHour * 6),\r\n            IsReadonly: false\r\n        }\r\n    ];\r\n    return readonlyEventsData;\r\n}","index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-9 control-section\">\n    <div id=\"Schedule\"></div>\n</div>\n\n\n\n\n</div></body></html>","index.ts":"{{ripple}}\r\nimport { Schedule, Agenda } from '@syncfusion/ej2-schedule';\r\nimport { NumericTextBox, ChangeEventArgs } from '@syncfusion/ej2-inputs';\r\nimport { DropDownList, ChangeEventArgs as DropDownChangeArgs } from '@syncfusion/ej2-dropdowns';\r\nimport { generateObject } from './helper';\r\n\r\nSchedule.Inject(Agenda);\r\n\r\n/**\r\n * Schedule agenda sample\r\n */\r\n\r\n\r\n    \r\n    // Initialize schedule component\r\n    let scheduleObj: Schedule = new Schedule({\r\n        width: '100%',\r\n        height: '650px',\r\n        views: [{ option: 'Agenda', allowVirtualScrolling: false }],\r\n        selectedDate: new Date(2018, 1, 15),\r\n        currentView: 'Agenda',\r\n        eventSettings: { dataSource: generateObject() },\r\n    });\r\n    scheduleObj.appendTo('#Schedule');\r\n\r\n\r\n\r\n"}
{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\n/**\n * ListView Default Sample\n */\nimport {ListView} from '@syncfusion/ej2-lists';\n\n\n\n    //Define an array of JSON data\n    let data: { [key: string]: Object }[] = [\n        { text: 'Hennessey Venom', id: 'list-01' },\n        { text: 'Bugatti Chiron', id: 'list-02' },\n        { text: 'Bugatti Veyron Super Sport', id: 'list-03' },\n        { text: 'SSC Ultimate Aero', id: 'list-04' },\n        { text: 'Koenigsegg CCR', id: 'list-05' },\n        { text: 'McLaren F1', id: 'list-06' },\n        { text: 'Aston Martin One- 77', id: 'list-07' },\n        { text: 'Jaguar XJ220', id: 'list-08' },\n        { text: 'McLaren P1', id: 'list-09' },\n        { text: 'Ferrari LaFerrari', id: 'list-10' },\n    ];\n\n    //Initialize ListView component\n    let listObj: ListView = new ListView({\n\n        //Set defined data to dataSource property\n        dataSource: data\n\n    });\n\n    //Render initialized ListView component\n    listObj.appendTo('#listview-def');\n\n    //Define an array of JSON data\n    let dataSource: { [key: string]: Object }[] = [\n        {\n            'text': 'Audi A4',\n            'id': '9bdb',\n            'category': 'Audi'\n        },\n        {\n            'text': 'Audi A5',\n            'id': '4589',\n            'category': 'Audi'\n        },\n        {\n            'text': 'Audi A6',\n            'id': 'e807',\n            'category': 'Audi'\n        },\n        {\n            'text': 'Audi A7',\n            'id': 'a0cc',\n            'category': 'Audi'\n        },\n        {\n            'text': 'Audi A8',\n            'id': '5e26',\n            'category': 'Audi'\n        },\n        {\n            'text': 'BMW 501',\n            'id': 'f849',\n            'category': 'BMW'\n        },\n        {\n            'text': 'BMW 502',\n            'id': '7aff',\n            'category': 'BMW'\n        },\n        {\n            'text': 'BMW 503',\n            'id': 'b1da',\n            'category': 'BMW'\n        },\n        {\n            'text': 'BMW 507',\n            'id': 'de2f',\n            'category': 'BMW'\n        },\n        {\n            'text': 'BMW 3200',\n            'id': 'b2b1',\n            'category': 'BMW'\n        }\n    ];\n\n    //Initialize ListView component\n    let grpListObj: ListView = new ListView({\n\n        //Set defined data to dataSource property\n        dataSource: dataSource,\n\n        //Map the appropriate columns to fields property\n        fields: { groupBy: 'category' }\n    });\n\n    //Render initialized ListView component\n    grpListObj.appendTo('#listview-grp');\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"col-lg-12 control-section\">\n    <div id=\"flat-list\">\n        <h4>Flat List</h4>\n\n    <!-- ListView element -->\n    <div id=\"listview-def\" tabindex=\"1\">\n    </div>\n    </div>\n    <div id=\"group-list\">\n    <h4>Group List</h4>\n\n    <!-- Group ListView element -->\n    <div id=\"listview-grp\" tabindex=\"1\">\n    </div>\n    </div>\n\n    \n\n    \n</div>\n<style>\n    #listview-def,#listview-grp {\n        border: 1px solid #dddddd;\n        border-radius: 3px;\n    }\n    .control-section{\n        overflow: auto;\n    }\n    #flat-list,\n    #group-list {\n        width: 49%;\n        margin: auto;\n        margin-bottom: 15px;\n    }\n\n    #flat-list h4, #group-list h4 {\n        padding-left: 16px;\n    }\n    #flat-list {\n        float: left;\n    }\n\n    #group-list {\n        float: right;\n    }\n\n    @media screen and (max-width: 590px) {\n        #flat-list,\n        #group-list {\n            width: 100%;\n        }\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div id=\"target\" class=\"col-lg-8 control-section\" style=\"height:350px;\">\n    <div style=\"position:relative; top:10px; left:10px;\">\n        <!-- Button to open the modal Dialog -->\n        <button id=\"dialogBtn\" type=\"button\">Open</button>\n    </div>\n    <!-- Initialize modal Dialog -->\n    <div id=\"modalDialog\">\n    </div>\n</div>\n\n\n<div class=\"col-lg-4 property-section\">\n    <table id=\"property\" title=\"Properties\">\n        <tbody><tr>\n            <td style=\"width:60%;\">\n                <div style=\"font-size: 13px;\">Close on overlay click</div>\n            </td>\n            <td>\n                <!-- Checkbox to enable / disable the overlay click -->\n                <input type=\"checkbox\" id=\"checkbox\" class=\"checkbox\">\n            </td>\n        </tr>\n    </tbody></table>\n</div>\n\n\n\n\n</div></body></html>","index.ts":"{{ripple}}\r\nimport { Dialog } from '@syncfusion/ej2-popups';\r\nimport { Button } from '@syncfusion/ej2-buttons';\r\nimport { CheckBox, ChangeEventArgs } from '@syncfusion/ej2-buttons';\r\n\r\n/**\r\n * Modal Dialog sample\r\n */\r\n\r\n\r\n    \r\n    // Rendering modal Dialog by enabling 'isModal' as true\r\n    let dialogObj: Dialog = new Dialog({\r\n        width: '335px',\r\n        header: 'Software Update',\r\n        content: 'Your current software version is up to date.',\r\n        target: document.getElementById('target'),\r\n        isModal: true,\r\n        animationSettings: { effect: 'None' },\r\n        buttons: [{\r\n            click: dlgButtonClick,\r\n            buttonModel: { content: 'OK', isPrimary: true }\r\n        }],\r\n        open: dialogOpen,\r\n        close: dialogClose\r\n    });\r\n    dialogObj.appendTo('#modalDialog');\r\n    document.getElementById('dialogBtn').focus();\r\n\r\n    let checkBoxObj: CheckBox = new CheckBox({ checked: false, change: onChange });\r\n    checkBoxObj.appendTo('#checkbox');\r\n\r\n    // Button has been created to open the modal Dialog\r\n    let button: Button = new Button({\r\n    });\r\n    button.appendTo('#dialogBtn');\r\n    document.getElementById('dialogBtn').onclick = (): void => {\r\n        dialogObj.show();\r\n    };\r\n\r\n    // Dialog will be closed, while clicking 'OK' button of the Dialog\r\n    function dlgButtonClick(): void {\r\n        dialogObj.hide();\r\n    }\r\n\r\n    // 'Open' Button will be shown, if modal Dialog is closed\r\n    function dialogClose(): void {\r\n        document.getElementById('dialogBtn').style.display = 'block';\r\n    }\r\n\r\n    // 'Open' Button will be hidden, if modal Dialog is opened\r\n    function dialogOpen(): void {\r\n        document.getElementById('dialogBtn').style.display = 'none';\r\n    }\r\n    // Dialog will be closed, while clicking on overlay\r\n    function onChange(args: ChangeEventArgs): void {\r\n        if (args.checked) {\r\n            dialogObj.overlayClick = (): void => {\r\n                dialogObj.hide();\r\n            };\r\n        } else {\r\n            dialogObj.overlayClick = (): void => {\r\n                dialogObj.show();\r\n            };\r\n        }\r\n    }\r\n"}
{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { Button } from '@syncfusion/ej2-buttons';\n\n/**\n * Default Dialog sample\n */\n\n\n    // Render the alert Dialog \n    let alertDialogObj: Dialog = new Dialog({\n        header: 'Low Battery',\n        content: '<div>10% of battery remaining</div>',\n        showCloseIcon: false,\n        buttons: [{\n            click: alertDlgBtnClick, buttonModel: { content: 'Dismiss', cssClass: 'e-flat', isPrimary: true }\n        }],\n        closeOnEscape: false, width: '250px',\n        target: document.getElementById('target'),\n        animationSettings: { effect: 'None' },\n        open: dialogOpen, close: dialogClose\n    });\n    alertDialogObj.appendTo('#alertDialog');\n    document.getElementById('alertBtn').focus();\n    // Render the confirmation Dialog\n    let confirmDialogObj: Dialog = new Dialog({\n        header: 'Delete Multiple Items',\n        visible: false,\n        content: '<span>Are you sure you want to permanently delete all of these items?</span>',\n        showCloseIcon: true, closeOnEscape: false, width: '400px',\n        buttons: [{\n            click: confirmDlgBtnClick,\n            buttonModel: { content: 'Yes', cssClass: 'e-flat', isPrimary: true }\n        },\n        { click: confirmDlgBtnClick, buttonModel: { cssClass: 'e-flat', content: 'No' } }],\n        target: document.getElementById('target'),\n        animationSettings: { effect: 'None' },\n        open: dialogOpen, close: dialogClose\n    });\n    confirmDialogObj.appendTo('#confirmDialog');\n    // Render the prompt Dialog \n    let promptDialogObj: Dialog = new Dialog({\n        header: 'Join Wi-Fi network',\n        visible: false,\n        showCloseIcon: false, closeOnEscape: false,\n        buttons: [{\n            click: promptDlgBtnClick, buttonModel: { content: 'Connect', cssClass: 'e-flat', isPrimary: true }\n        },\n        {\n            click: promptDlgBtnClick, buttonModel: { cssClass: 'e-flat', content: 'Cancel' }\n        }],\n        width: '330px',\n        target: document.getElementById('target'),\n        animationSettings: { effect: 'None' },\n        open: dialogOpen, close: dialogClose\n    });\n    promptDialogObj.appendTo('#promptDialog');\n    // Create Button to open the alert Dialog\n    let alertBtn: Button = new Button({});\n    alertBtn.appendTo('#alertBtn');\n    document.getElementById('alertBtn').onclick = (): void => {\n        alertDialogObj.show();\n        dialogOpen();\n    };\n    // Create Button to open the confirmation Dialog\n    let confirmBtn: Button = new Button({});\n    confirmBtn.appendTo('#confirmBtn');\n    document.getElementById('confirmBtn').onclick = (): void => {\n        confirmDialogObj.show();\n        dialogOpen();\n    };\n    function alertDlgBtnClick(): void {\n        alertDialogObj.hide();\n    }\n    function confirmDlgBtnClick(): void {\n        confirmDialogObj.hide();\n    }\n    function promptDlgBtnClick(): void {\n        promptDialogObj.hide();\n    }\n    // Create Button to open the prompt Dialog\n    let promptBtn: Button = new Button({});\n    promptBtn.appendTo('#promptBtn');\n    document.getElementById('promptBtn').onclick = (): void => {\n        promptDialogObj.show();\n        dialogOpen();\n    };\n    // Buttons will be shown when Dialog is closed\n    function dialogClose(): void {\n        (document.querySelectorAll('.dlgbtn')[0] as HTMLElement).classList.remove('e-btn-hide');\n        (document.querySelectorAll('.dlgbtn')[1] as HTMLElement).classList.remove('e-btn-hide');\n        (document.querySelectorAll('.dlgbtn')[2] as HTMLElement).classList.remove('e-btn-hide');\n    }\n    // Buttons will be hidden when Dialog is opened\n    function dialogOpen(): void {\n        (document.querySelectorAll('.dlgbtn')[0] as HTMLElement).classList.add('e-btn-hide');\n        (document.querySelectorAll('.dlgbtn')[1] as HTMLElement).classList.add('e-btn-hide');\n        (document.querySelectorAll('.dlgbtn')[2] as HTMLElement).classList.add('e-btn-hide');\n    }\n    // Styles will be added, while password field of prompt Dialog has been focused\n    document.getElementById('password').addEventListener('focus', function (): void {\n        this.parentElement.classList.add('e-input-focus');\n    });\n    // Styles will be removed, while password field of prompt Dialog has been focused out\n    document.getElementById('password').addEventListener('blur', function (): void {\n        this.parentElement.classList.remove('e-input-focus');\n    });\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/production/demos/styles/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div id=\"target\" class=\"col-lg-12 control-section\">\n    <!-- Buttons to open corresponding Dialog -->\n    <button id=\"alertBtn\" class=\"dlgbtn\" type=\"button\">Alert</button>\n    <button id=\"confirmBtn\" class=\"dlgbtn\" type=\"button\">Confirm</button>\n    <button id=\"promptBtn\" class=\"dlgbtn\" type=\"button\">Prompt</button>\n    <div id=\"dialogWrapper\" class=\"content-wrapper\">\n        <!-- Initialize alert Dialog -->\n        <div id=\"alertDialog\"></div>\n        <!-- Initialize confirmation Dialog -->\n        <div id=\"confirmDialog\"></div>\n        <!-- Initialize prompt Dialog -->\n        <div id=\"promptDialog\">\n            <!-- Prompt Dialog content  -->\n            <table style=\"border-collapse: separate;border-spacing: 10px;width:100%;padding: 0px 20px 20px;\">\n                <tbody><tr>\n                    <td>SSID:</td>\n                </tr>\n                <tr>\n                    <td><b>AndroidAP</b></td>\n                </tr>\n                <tr>\n                    <td>Password:</td>\n                </tr>\n                <tr>\n                    <td>\n                    <span class=\"e-input-group\">\n                    <input type=\"password\" id=\"password\" name=\"Required\" class=\"e-input\">\n                    </span></td>\n                </tr>\n            </tbody></table>\n        </div>\n    </div>\n</div>\n\n\n<style>\n    .e-btn-hide {\n\t    display: none;\n\t}\n    .dlgbtn {\n        margin-right: 10px;\n    }\n    #target {\n        height: 100%;\n    }\n    @media screen and (min-width: 150px) and (max-width: 480px) {\n        .control-section {\n            margin-bottom: 30px;\n        }\n        .control-wrapper {\n            margin-bottom: 0px;\n        }\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
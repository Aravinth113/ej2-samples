{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport { LinearGauge, Annotations } from '@syncfusion/ej2-lineargauge';\nLinearGauge.Inject(Annotations);\n\n/**\n * Thermometer linear gauge\n */\n\n    let gauge1: LinearGauge = new LinearGauge(firstGauge());\n    gauge1.appendTo('#container1');\n    let gauge2: LinearGauge = new LinearGauge(secondGauge());\n    gauge2.appendTo('#container2');\n    let gauge3: LinearGauge = new LinearGauge(thirdGauge());\n    gauge3.appendTo('#container3');\n\n\nexport function firstGauge(): LinearGauge {\n    let gauge1: LinearGauge = new LinearGauge({\n        orientation: 'Horizontal',\n        container: {\n            width: 30,\n            backgroundColor: '#e0e0e0',\n            border: {\n                width: 0\n            },\n            offset: 30\n        },\n        axes: [{\n            line: {\n                offset: 30\n            },\n            labelStyle: {\n                font: {\n                    color: '#424242',\n                },\n                offset: 50\n            },\n            pointers: [{\n                value: 10,\n                placement: 'Near',\n                offset: -60,\n                height: 10,\n                width: 10,\n                color: '#424242',\n                markerType: 'Triangle'\n            }],\n            ranges: [\n                {\n                    start: 0,\n                    end: 10,\n                    startWidth: 30,\n                    endWidth: 30,\n                    color: '#30b32d'\n                }\n            ]\n        }],\n        annotations: [\n            {\n                content: '<div id=\"title\" style=\"width:300px;\"> <img style=\"float:left\" src'\n                + '=\"src/lineargauge/images/Exercise Tracking.svg\"/><p style=\"font-size:18px;color:#4285F4;float:left;margin-left:12px;'\n                + 'margin-top:4px\">Exercise Tracking </p></div>',\n                axisIndex: 0, zIndex: '1',\n                axisValue: 0,\n                x: 150,\n                y: -180\n            },\n            {\n                content: '<div id=\"running\" style=\"width:100px;\"><img style=\"height:25px;width:25px;float:left\" src=\"http://npmci.syncfusion.com/production/demos/src/lineargauge' +\n                '/images/Running.svg\" /></span><p style=\"float:left;margin-left:10px;\">Running</p></div>',\n                axisIndex: 0, zIndex: '1',\n                axisValue: 0,\n                x: 50,\n                y: -130\n            },\n            {\n                content: '<div id=\"pointerText\" style=\"width:60px;\"><p style=\"font-size:15px;color:#30b32d;\">10 MPH</p></div>',\n                axisIndex: 0, zIndex: '1',\n                axisValue: 10,\n                y: -65\n            }\n        ]\n    });\n    return gauge1;\n}\n\nexport function secondGauge(): LinearGauge {\n    let gauge1: LinearGauge = new LinearGauge({\n        orientation: 'Horizontal',\n        container: {\n            width: 30,\n            backgroundColor: '#e0e0e0',\n            border: {\n                width: 0\n            },\n            offset: -50\n        },\n        axes: [{\n            line: {\n                offset: 30\n            },\n            labelStyle: {\n                font: {\n                    color: '#424242',\n                },\n                offset: 50\n            },\n            pointers: [{\n                value: 28,\n                height: 10,\n                width: 10,\n                placement: 'Near',\n                offset: -60,\n                color: '#424242',\n                markerType: 'Triangle'\n            }],\n            ranges: [\n                {\n                    start: 0,\n                    end: 28,\n                    startWidth: 30,\n                    endWidth: 30,\n                    color: '#30b32d'\n                }\n            ]\n        }],\n        annotations: [{\n            content: '<div id=\"cycle\" style=\"width:100px;\"><img style=\"height:25px;width:25px;float:left\" src=\"http://npmci.syncfusion.com/production/demos/src/lineargauge'\n            + '/images/Cycling.svg\" /></span><p style=\"float:left;margin-left:10px;\">Cycling</p></div>',\n            axisIndex: 0, zIndex: '1',\n            axisValue: 0,\n            x: 50,\n            y: -110\n        },\n        {\n            content: '<div id=\"pointerText\" style=\"width:60px;\"><p style=\"font-size:15px;color:#30b32d;\">28 MPH</p></div>',\n            axisIndex: 0,\n            axisValue: 28,\n            y: -70\n        }]\n    });\n    return gauge1;\n}\n\nexport function thirdGauge(): LinearGauge {\n    let gauge3: LinearGauge = new LinearGauge({\n        orientation: 'Horizontal',\n        container: {\n            width: 30,\n            backgroundColor: '#e0e0e0',\n            border: {\n                width: 0\n            },\n            offset: -90\n        },\n        axes: [{\n            maximum: 10,\n            line: {\n                offset: 30\n            },\n            labelStyle: {\n                font: {\n                    color: '#424242',\n                },\n                format: '{value}k',\n                offset: 50\n            },\n            pointers: [{\n                value: 2,\n                height: 10,\n                width: 10,\n                placement: 'Near',\n                offset: -60,\n                color: '#424242',\n                markerType: 'Triangle'\n            }],\n            ranges: [\n                {\n                    start: 0,\n                    end: 2,\n                    startWidth: 30,\n                    endWidth: 30,\n                    color: '#30b32d'\n                }\n            ]\n        }],\n        annotations: [{\n            content: '<div id=\"walk\" style=\"width:100px;\"><img style=\"height:25px;width:25px;float:left\" src=\"http://npmci.syncfusion.com/production/demos/src/' +\n            'lineargauge/images/Walking.svg\" /></span><p style=\"float:left;margin-left:10px;\">Walking</p></div>',\n            axisIndex: 0,\n            axisValue: 0, zIndex: '1',\n            x: 50,\n            y: -120\n        },\n        {\n            content: '<div id=\"pointerText\" style=\"width:100px;\"><p style=\"font-size:15px;color:#30b32d;\">2000 Steps</p></div>',\n            axisIndex: 0,\n            axisValue: 2.2, zIndex: '1',\n            y: -65\n        }]\n    });\n    return gauge3;\n}","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/production/demos/styles/material.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div class=\"row\">\n        <div id=\"container1\" style=\"height:300px;\">\n        </div>\n    </div>\n    <div class=\"row\">\n        <div id=\"container2\" style=\"height:250px;\">\n        </div>\n    </div>\n    <div class=\"row\">\n        <div id=\"container3\" style=\"height:250px;\">\n        </div>\n    </div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport { LinearGauge, ContainerType, Orientation } from '@syncfusion/ej2-lineargauge';\n\n/**\n * Default linear gauge\n */\n\n    let gauge: LinearGauge = new LinearGauge({\n        title: 'Temperature Measure',\n        container: {\n            width: 13,\n            roundedCornerRadius: 5,\n            type: 'Thermometer'\n        },\n        axes: [{\n            minimum: 0,\n            maximum: 180,\n            line: {\n                width: 0\n            },\n            labelStyle: {\n                font: {\n                    color: '#000000'\n                }\n            },\n            majorTicks: {\n                interval: 20,\n                color: '#9e9e9e'\n            },\n            minorTicks: {\n                color: '#9e9e9e'\n            },\n            pointers: [\n                {\n                    value: 90,\n                    height: 13,\n                    width: 13,\n                    roundedCornerRadius: 5,\n                    type: 'Bar',\n                    color: '#f02828'\n                }\n            ]\n        },\n        {\n            minimum: 0,\n            maximum: 180,\n            line: {\n                width: 0\n            },\n            labelStyle: {\n                font: {\n                    color: '#000000'\n                }\n            },\n            majorTicks: {\n                interval: 20\n            },\n            opposedPosition: true,\n            pointers: [\n                {\n                    width: 0\n                }\n            ]\n        }]\n    });\n    gauge.appendTo('#boxContainer');\n\n    document.getElementById('containerMode').onchange = () => {\n        let ele: HTMLSelectElement = <HTMLSelectElement>document.getElementById('containerMode');\n        gauge.container.type = <ContainerType>ele.value;\n        gauge.refresh();\n    };\n    document.getElementById('orientationMode').onchange = () => {\n        let ele: HTMLSelectElement = <HTMLSelectElement>document.getElementById('orientationMode');\n        gauge.orientation = <Orientation>ele.value;\n        gauge.refresh();\n    };\n\n\n\n\n\n\n","index.html":"<html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"boxContainer\" style=\"width:92%;\"></div>\n        </div>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody>\n                <tr>\n                    <td>\n                        <div>Orientation</div>\n                    </td>\n                    <td>\n                        <div>\n                            <select name=\"selectIndex\" autocomplete=\"off\" id=\"orientationMode\" class=\"form-control\" style=\"width:90%\"> \n                        <option value=\"Vertical\" selected>Vertical</option>\n                        <option value=\"Horizontal\">Horizontal</option>\n                     </select>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <div>Container Type</div>\n                    </td>\n                    <td>\n                        <div>\n                            <select name=\"selectIndex\" autocomplete=\"off\" id=\"containerMode\" class=\"form-control\" style=\"width:90%\"> \n                        <option value=\"Normal\">Normal</option>\n                        <option value=\"RoundedRectangle\">RoundedRectangle</option>\n                        <option value=\"Thermometer\" selected>Thermometer</option>\n                     </select>\n                        </div>\n                    </td>\n                </tr>\n\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
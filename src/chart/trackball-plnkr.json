{"trackball-data":"/**\n * Trackball data\n */\nexport let john: object[] = [{ x: new Date(2000, 2, 11), y: 15 }, { x: new Date(2000, 9, 14), y: 20 },\n{ x: new Date(2001, 2, 11), y: 25 }, { x: new Date(2001, 9, 16), y: 21 },\n{ x: new Date(2002, 2, 7), y: 13 }, { x: new Date(2002, 9, 7), y: 18 },\n{ x: new Date(2003, 2, 11), y: 24 }, { x: new Date(2003, 9, 14), y: 23 },\n{ x: new Date(2004, 2, 6), y: 19 }, { x: new Date(2004, 9, 6), y: 31 },\n{ x: new Date(2005, 2, 11), y: 39 }, { x: new Date(2005, 9, 11), y: 50 },\n{ x: new Date(2006, 2, 11), y: 24 }];\n\nexport let andrew: object[] = [{ x: new Date(2000, 2, 11), y: 39 }, { x: new Date(2000, 9, 14), y: 30 },\n{ x: new Date(2001, 2, 11), y: 28 }, { x: new Date(2001, 9, 16), y: 35 },\n{ x: new Date(2002, 2, 7), y: 39 }, { x: new Date(2002, 9, 7), y: 41 },\n{ x: new Date(2003, 2, 11), y: 45 }, { x: new Date(2003, 9, 14), y: 48 },\n{ x: new Date(2004, 2, 6), y: 54 }, { x: new Date(2004, 9, 6), y: 55 },\n{ x: new Date(2005, 2, 11), y: 57 }, { x: new Date(2005, 9, 11), y: 60 },\n{ x: new Date(2006, 2, 11), y: 60 }];\n\nexport let thomas: object[] = [{ x: new Date(2000, 2, 11), y: 60 }, { x: new Date(2000, 9, 14), y: 55 },\n{ x: new Date(2001, 2, 11), y: 48 }, { x: new Date(2001, 9, 16), y: 57 },\n{ x: new Date(2002, 2, 7), y: 62 }, { x: new Date(2002, 9, 7), y: 64 },\n{ x: new Date(2003, 2, 11), y: 57 }, { x: new Date(2003, 9, 14), y: 53 },\n{ x: new Date(2004, 2, 6), y: 63 }, { x: new Date(2004, 9, 6), y: 50 },\n{ x: new Date(2005, 2, 11), y: 66 }, { x: new Date(2005, 9, 11), y: 65 },\n{ x: new Date(2006, 2, 11), y: 79 }];\n\nexport let mark: object[] = [{ x: new Date(2000, 2, 11), y: 75 }, { x: new Date(2000, 9, 14), y: 75 },\n{ x: new Date(2001, 2, 11), y: 68 }, { x: new Date(2001, 9, 16), y: 75 },\n{ x: new Date(2002, 2, 7), y: 71 }, { x: new Date(2002, 9, 7), y: 69 },\n{ x: new Date(2003, 2, 11), y: 81 }, { x: new Date(2003, 9, 14), y: 84 },\n{ x: new Date(2004, 2, 6), y: 85 }, { x: new Date(2004, 9, 6), y: 87 },\n{ x: new Date(2005, 2, 11), y: 75 }, { x: new Date(2005, 9, 11), y: 70 },\n{ x: new Date(2006, 2, 11), y: 85 }];\n\nexport let william: object[] = [{ x: new Date(2000, 2, 11), y: 85 }, { x: new Date(2000, 9, 14), y: 83 },\n{ x: new Date(2001, 2, 11), y: 85 }, { x: new Date(2001, 9, 16), y: 87 },\n{ x: new Date(2002, 2, 7), y: 82 }, { x: new Date(2002, 9, 7), y: 74 },\n{ x: new Date(2003, 2, 11), y: 73 }, { x: new Date(2003, 9, 14), y: 75 },\n{ x: new Date(2004, 2, 6), y: 73 }, { x: new Date(2004, 9, 6), y: 60 },\n{ x: new Date(2005, 2, 11), y: 48 }, { x: new Date(2005, 9, 11), y: 55 },\n{ x: new Date(2006, 2, 11), y: 40 }];","index.ts":"import { Marker, Tooltip, Crosshair, DateTime, ILoadedEventArgs } from '@syncfusion/ej2-charts';\nimport { Chart, LineSeries, Legend } from '@syncfusion/ej2-charts';\nimport { john, andrew, thomas, mark, william } from './trackball-data';\nChart.Inject(LineSeries, DateTime, Tooltip, Crosshair, Marker, Legend);\n\n/**\n * TrackBall Sample\n */\n\n    let chart: Chart = new Chart({\n\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            title: 'Years',\n            minimum: new Date(2000, 1, 1), maximum: new Date(2006, 2, 11),\n            intervalType: 'Years',\n            valueType: 'DateTime',\n            lineStyle: { width: 0 },\n            majorGridLines: { width: 0 },\n            edgeLabelPlacement: 'Shift'\n        },\n\n        //Initializing Primary Y Axis\t\n        primaryYAxis:\n        {\n            title: 'Revenue in Millions',\n            labelFormat: '{value}M',\n            majorTickLines: { width: 0 },\n            minimum: 10, maximum: 90,\n            lineStyle: { width: 0 }\n        },\n\n        //Initializing Chart Series\n        series: [\n            {\n                type: 'Line',\n                dataSource: john,\n                name: 'John',\n                xName: 'x', width: 2,\n                yName: 'y',\n                marker: { visible: true }\n            },\n            {\n                type: 'Line',\n                dataSource: andrew,\n                name: 'Andrew',\n                xName: 'x', width: 2,\n                yName: 'y',\n                marker: { visible: true }\n            },\n            {\n                type: 'Line',\n                dataSource: thomas,\n                name: 'Thomas',\n                xName: 'x', width: 2,\n                yName: 'y',\n                marker: { visible: true }\n            },\n            {\n                type: 'Line',\n                dataSource: mark,\n                name: 'Mark',\n                xName: 'x', width: 2,\n                yName: 'y',\n                marker: { visible: true }\n            },\n            {\n                type: 'Line',\n                dataSource: william,\n                name: 'William',\n                xName: 'x', width: 2,\n                yName: 'y',\n                marker: { visible: true }\n            }\n        ],\n        tooltip: { enable: true, shared: true, format: '${series.name} : ${point.x} : ${point.y}' },\n        crosshair: { enable: true, lineType: 'Vertical' },\n        //Initializing Chart title\n        title: 'Average Sales per Person',\n        load: (args: ILoadedEventArgs) => {\n            let selectedTheme: string = location.hash.split('/')[1];\n            args.chart.theme = selectedTheme.indexOf('fabric') > -1 ? 'Fabric' : 'Material';\n        }\n    });\n    chart.appendTo('#container');\n","index.html":"<html><head>\n    <link href=\"http://npmci.syncfusion.com/production/demos/styles/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div id=\"container\" style=\"width:92%\"></div>\n</div>\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
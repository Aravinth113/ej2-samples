{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport {\n    AccumulationTheme, AccumulationChart, AccumulationLegend, PieSeries, AccumulationDataLabel, AccumulationTooltip,\n    IAccAnimationCompleteEventArgs, AccPoints, IAccTextRenderEventArgs, AccumulationSelection,\n    IAccLoadedEventArgs\n} from '@syncfusion/ej2-charts';\nAccumulationChart.Inject(AccumulationLegend, PieSeries, AccumulationDataLabel, AccumulationTooltip, AccumulationSelection);\nimport { Browser } from '@syncfusion/ej2-base';\n\n/**\n * Sample for Doughnut\n */\nlet centerTitle: HTMLDivElement = document.createElement('div') as HTMLDivElement;\ncenterTitle.innerHTML = 'Expenses <br> Year  &nbsp 2013';\ncenterTitle.style.position = 'absolute';\ncenterTitle.style.visibility = 'hidden';\n\n    let pie: AccumulationChart = new AccumulationChart({\n        enableSmartLabels: true,\n        selectionMode: 'Point',\n        // Initialize the chart series\n        series: [\n            {\n                dataSource: [\n                    { 'x': 'Net-tution and Fees', y: 21, text: '21%' },\n                    { 'x': 'Self-supporting Operations', y: 21, text: '21%' },\n                    { 'x': 'Private Gifts', y: 8, text: '8%' },\n                    { 'x': 'All Other', y: 8, text: '8%' },\n                    { 'x': 'Local Revenue', y: 4, text: '4%' },\n                    { 'x': 'State Revenue', y: 21, text: '21%' },\n                    { 'x': 'Federal Revenue', y: 16, text: '16%' }\n                ],\n                xName: 'x', yName: 'y', startAngle: 0,\n                endAngle: 360, innerRadius: '40%',\n                dataLabel: {\n                    visible: true, position: 'Inside',\n                    name: 'text',\n                    font: { color: 'white', fontWeight: '600', size: '14px' }\n                },\n            }\n        ],\n        legendSettings: {\n            visible: true, toggleVisibility: false,\n            position: 'Right', height: '28%', width: '44%'\n        },\n        // Triggered animation complete, text render and load event\n        animationComplete: (args: IAccAnimationCompleteEventArgs) => {\n            centerTitle.style.fontSize = getFontSize(args.accumulation.initialClipRect.width);\n            let rect: ClientRect = centerTitle.getBoundingClientRect();\n            centerTitle.style.top = (args.accumulation.center.y - rect.height / 2) + 'px';\n            centerTitle.style.left = (args.accumulation.center.x - rect.width / 2) + 'px';\n            centerTitle.style.visibility = 'visible';\n            let points: AccPoints[] = args.accumulation.visibleSeries[0].points;\n            for (let point of points) {\n                if (point.labelPosition === 'Outside' && point.labelVisible) {\n                    let label: Element = document.getElementById('container_datalabel_Series_0_text_' + point.index);\n                    label.setAttribute('fill', 'black');\n                }\n            }\n        },\n        textRender: (args: IAccTextRenderEventArgs) => {\n            args.series.dataLabel.font.size = getFontSize(pie.initialClipRect.width);\n            pie.animateSeries = true;\n        },\n        load: (args: IAccLoadedEventArgs) => {\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.accumulation.theme = <AccumulationTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n            args.accumulation.legendSettings.position = Browser.isDevice ? 'Bottom' : 'Right';\n        },\n        tooltip: {\n            enable: true, format: '${point.x} <br> Composition: ${point.y}%'\n        },\n        title: 'Education Institutional Revenue',\n    });\n    pie.appendTo('#container');\n    document.getElementById('container').appendChild(centerTitle);\n    function getFontSize(width: number): string {\n        if (width > 300) {\n            return '13px';\n        } else if (width > 250) {\n            return '8px';\n        } else {\n            return '6px';\n        }\n    }\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div id=\"container\"></div>\n</div>\n\n\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport { Chart, LineSeries, Legend, ILoadedEventArgs } from '@syncfusion/ej2-charts';\nimport { EmitType } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\nChart.Inject(LineSeries, Legend);\n/**\n * Performance Sample\n */\nlet chart: Chart;\nlet loaded: EmitType<ILoadedEventArgs>;\nlet dt1: number;\nlet dt2: number;\n\n    chart = new Chart({\n\n        //Initializing Primary X Axis\n        primaryXAxis:\n        {\n            majorGridLines: { color: 'transparent' }\n        },\n\n        //Initializing Chart Series\n        series: [\n            {\n                name: 'Series1',\n                type: 'Line',\n                animation: { enable: false }\n            }\n        ],\n        legendSettings: { visible: false },\n        load: (args: ILoadedEventArgs) => {\n            let selectedTheme: string = location.hash.split('/')[1];\n            args.chart.theme = (selectedTheme && selectedTheme.indexOf('fabric') > -1) ? 'Fabric' : 'Material';\n        }\n    });\n    chart.appendTo('#container');\n    let button: Button = new Button({ cssClass: 'e-info', isPrimary: true });\n    button.appendTo('#load');\n\n    document.getElementById('load').onclick = () => {\n        let series1: Object[] = [];\n        let point1: Object;\n        let value: number = 0;\n        let i: number;\n        for (i = 0; i < 100000; i++) {\n\n            value += (Math.random() * 10 - 5);\n            point1 = { x: i, y: value };\n            series1.push(point1);\n        }\n        dt1 = new Date().getTime();\n        chart.series[0].dataSource = series1;\n        chart.series[0].xName = 'x';\n        chart.series[0].yName = 'y';\n        chart.legendSettings.visible = false;\n        chart.loaded = loaded;\n        chart.refresh();\n    };\n\n    loaded = (args: Object): void => {\n        dt2 = new Date().getTime();\n        document.getElementById('performanceTime').innerHTML = (dt2 - dt1) + 'ms';\n    };\n\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div>\n    <div class=\"col-lg-9 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"container\"></div>\n        </div>\n    </div>\n    <div class=\"col-lg-3 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr style=\"height: 50px\">\n                <td style=\"width: 50%\">\n                    <div> \n                        <button id=\"load\" style=\"text-transform:none !important\">Load 100K Points</button>\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td style=\"width: 30%\">\n                    <div>Time Taken</div>\n                </td>\n                <td style=\"width: 70%;\">\n                    <div>\n                        <span id=\"performanceTime\">0ms</span>\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
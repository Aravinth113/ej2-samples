{"index.ts":"import { Chart, StackingColumnSeries, Category, Legend, Tooltip, ILoadedEventArgs } from '@syncfusion/ej2-charts';\nChart.Inject(StackingColumnSeries, Category, Legend, Tooltip);\n\n/**\n * Stacked-Column Series\n */\n\n    let chart: Chart = new Chart({\n\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            title: 'Years',\n            lineStyle: { width: 0 },\n            majorGridLines: { width: 1 },\n            minorGridLines: { width: 1 },\n            minorTickLines: { width: 1 },\n            interval: 1,\n            labelIntersectAction : 'Rotate45',\n            valueType: 'Category'\n        },\n        //Initializing Primary Y Axis\t\n        primaryYAxis:\n        {\n            title: 'Sales in Billions',\n            minimum: 0,\n            maximum: 700,\n            interval: 100,\n            majorGridLines: { width: 1 },\n            minorGridLines: { width: 1 },\n            minorTickLines: { width: 1 },\n            labelFormat: '{value}B',\n        },\n        //Initializing Chart Series\n        series: [\n            {\n                type: 'StackingColumn',\n                dataSource: [\n                    { x: '2014', y: 111.1 },\n                    { x: '2015', y: 127.3 },\n                    { x: '2016', y: 143.4 },\n                    { x: '2017', y: 159.9 },\n                    { x: '2018', y: 175.4 },\n                    { x: '2019', y: 189.0 },\n                    { x: '2020', y: 202.7 }],\n                xName: 'x', width: 2,\n                yName: 'y', name: 'UK',\n            },\n            {\n                type: 'StackingColumn',\n                dataSource: [\n                    { x: '2014', y: 76.9 },\n                    { x: '2015', y: 99.5 },\n                    { x: '2016', y: 121.7 },\n                    { x: '2017', y: 142.5 },\n                    { x: '2018', y: 166.7 },\n                    { x: '2019', y: 182.9 },\n                    { x: '2020', y: 197.3 }],\n                xName: 'x', width: 2,\n                yName: 'y', name: 'Germany',\n            },\n            {\n                type: 'StackingColumn',\n                dataSource: [\n                    { x: '2014', y: 66.1 },\n                    { x: '2015', y: 79.3 },\n                    { x: '2016', y: 91.3 },\n                    { x: '2017', y: 102.4 },\n                    { x: '2018', y: 112.9 },\n                    { x: '2019', y: 122.4 },\n                    { x: '2020', y: 120.9 }],\n                xName: 'x', width: 2,\n                yName: 'y', name: 'France',\n\n            },\n            {\n                type: 'StackingColumn',\n                dataSource: [\n                    { x: '2014', y: 34.1 },\n                    { x: '2015', y: 38.2 },\n                    { x: '2016', y: 44.0 },\n                    { x: '2017', y: 51.6 },\n                    { x: '2018', y: 61.9 },\n                    { x: '2019', y: 71.5 },\n                    { x: '2020', y: 82.0 }],\n                xName: 'x', width: 2,\n                yName: 'y', name: 'Italy',\n\n            }\n        ],\n\n        //Initializing Chart title\n        title: 'Mobile Game Market by Country',\n        tooltip: { enable: true, format: '${series.name}<br>${point.x} : ${point.y}' },\n        load: (args: ILoadedEventArgs) => {\n            let selectedTheme: string = location.hash.split('/')[1];\n            args.chart.theme = selectedTheme.indexOf('fabric') > -1 ? 'Fabric' : 'Material';\n        }\n\n    });\n    chart.appendTo('#container');\n","index.html":"<html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div id=\"container\"></div>\n    <div style=\"float: right; margin-right: 10px;\">Source:\n       <a href=\"https://www.cyberagent.co.jp/en/newsinfo/press/detail/id=12026\" target=\"_blank\">www.cyberagent.co.jp</a>\n    </div>\n</div>\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
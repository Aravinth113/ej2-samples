{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport { Chart, Selection, SelectionMode, ColumnSeries, ChartTheme } from '@syncfusion/ej2-charts';\nimport { Legend, Category, ScatterSeries, ILoadedEventArgs } from '@syncfusion/ej2-charts';\nChart.Inject(Selection, Legend, ColumnSeries, Category, ScatterSeries);\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n\n/**\n * Sample for Selection.\n */\n\n    let chart: Chart = new Chart({\n\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            title: 'Countries',\n            valueType: 'Category',\n             interval: 1,\n            labelIntersectAction : 'Rotate90'\n        },\n\n        //Initializing Primary Y Axis\n        primaryYAxis:\n        {\n            title: 'Distribution',\n            labelFormat: '{value}%',\n            interval: 20\n        },\n\n        //Initializing Chart Series\n        series: [\n            {\n                type: 'Column',\n                dataSource: [\n                    { x: 'CHN', y: 17 }, { x: 'USA', y: 19 },\n                    { x: 'IDN', y: 29 }, { x: 'JAP', y: 13 },\n                    { x: 'BRZ', y: 24 }\n                ],\n                xName: 'x', width: 2,\n                yName: 'y', name: 'Age 0-14',\n            },\n            {\n                type: 'Column',\n                dataSource: [\n                    { x: 'CHN', y: 54 }, { x: 'USA', y: 67 },\n                    { x: 'IDN', y: 65 }, { x: 'JAP', y: 61 },\n                    { x: 'BRZ', y: 68 }\n                ],\n                xName: 'x', width: 2,\n                yName: 'y', name: 'Age 15-64',\n            },\n            {\n                type: 'Column',\n                dataSource: [\n                    { x: 'CHN', y: 9 }, { x: 'USA', y: 14 },\n                    { x: 'IDN', y: 6 }, { x: 'JAP', y: 26 },\n                    { x: 'BRZ', y: 8 }\n                ],\n                xName: 'x', width: 2,\n                yName: 'y', name: 'Age 65 & Above',\n            }\n        ],\n        //Initializing Chart title\n        title: 'Age Distribution by Country', legendSettings: { visible: true, toggleVisibility: false },\n        //Initializing Selection Mode\n        selectionMode: 'Point',\n        load: (args: ILoadedEventArgs) => {\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n        }\n    });\n    chart.appendTo('#container');\n    let mode: DropDownList = new DropDownList({\n        index: 0,\n        placeholder: 'Select Range Bar Color',\n        width: 120,\n        change: () => {\n            chart.selectionMode = <SelectionMode>mode.value;\n            chart.dataBind();\n        }\n    });\n    mode.appendTo('#selmode');\n    document.getElementById('select').onchange = () => {\n        let element: HTMLInputElement = <HTMLInputElement>(document.getElementById('select'));\n        chart.isMultiSelect = element.checked;\n        chart.dataBind();\n    };\n\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/production/demos/styles/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"container\" style=\"width:92%\"></div>\n        </div>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr style=\"height: 50px\">\n                <td style=\"width: 60%\">\n                    <div>Selection Mode:</div>\n                </td>\n                <td style=\"width: 40%;\">\n                    <select name=\"selectIndex\" autocomplete=\"off\" id=\"selmode\" style=\"margin-left: -25px\">\n                        <option value=\"Point\">Point</option>\n                        <option value=\"Series\">Series</option>\n                        <option value=\"Cluster\">Cluster</option>\n                        <option value=\"None\">None</option>\n                    </select>\n                </td>\n            </tr>\n            <tr id=\"\" style=\"height: 50px\">\n                <td style=\"width: 80%\">\n                    <div> Enable Multi Selection:</div>\n                </td>\n                <td>\n                    <input type=\"checkbox\" id=\"select\" style=\"margin-top: 15px\">\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
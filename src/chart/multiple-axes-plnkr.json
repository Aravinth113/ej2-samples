{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport {\n    Chart, LineSeries, ChartAnnotation, ColumnSeries,\n    Category, Tooltip, ILoadedEventArgs, ChartTheme\n} from '@syncfusion/ej2-charts';\nChart.Inject(LineSeries, ColumnSeries, Category, Tooltip, ChartAnnotation);\nimport { Browser } from '@syncfusion/ej2-base';\n\n/**\n * Sample for Multiple Axes\n */\n\n    let chart: Chart = new Chart({\n\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            valueType: 'Category',\n            interval: 1,\n            labelIntersectAction: 'Rotate90',\n            majorGridLines: { width: 0 },\n        },\n\n        //Initializing Primary Y Axis\n        primaryYAxis:\n        {\n            minimum: 0, maximum: 100, interval: 20,\n            lineStyle: { width: 0 },\n            labelFormat: '{value}°F'\n        },\n        chartArea: {\n            border: {\n                width: 0\n            }\n        },\n        // Initializing axes\n        axes:\n        [\n            {\n                majorGridLines: { width: 0 },\n                rowIndex: 0, opposedPosition: true,\n                lineStyle: { width: 0 }, majorTickLines: { width: 0 },\n                minimum: 24, maximum: 36, interval: 2,\n                name: 'yAxis', minorTickLines: { width: 0 },\n                labelFormat: '{value}°C'\n            }\n        ],\n        annotations: [{\n            content: '<div id=\"chart_cloud\"><img src=\"http://npmci.syncfusion.com/production/demos/src/chart/images/cloud.png\"  style=\"width: 41px; height: 41px\"/></div>',\n            x: 'Sun', y: 35, coordinateUnits: 'Point', verticalAlignment: 'Top'\n        }, {\n            content: '<div id=\"chart_cloud\"><img src=\"http://npmci.syncfusion.com/production/demos/src/chart/images/sunny.png\"  style=\"width: 41px; height: 41px\"/></div>',\n            x: 'Sat', y: 34, coordinateUnits: 'Point', yAxisName: 'yAxis'\n        }],\n        //Initializing Chart Series\n        series: [\n            {\n                type: 'Column',\n                dataSource: [\n                    { x: 'Sun', y: 35 }, { x: 'Mon', y: 40 },\n                    { x: 'Tue', y: 80 }, { x: 'Wed', y: 70 }, { x: 'Thu', y: 65 }, { x: 'Fri', y: 55 },\n                    { x: 'Sat', y: 50 }\n                ],\n                width: 2,\n                xName: 'x', yName: 'y',\n                name: 'Germany',\n            },\n            {\n                type: 'Line',\n                dataSource: [\n                    { x: 'Sun', y: 30 }, { x: 'Mon', y: 28 },\n                    { x: 'Tue', y: 29 }, { x: 'Wed', y: 30 }, { x: 'Thu', y: 33 }, { x: 'Fri', y: 32 },\n                    { x: 'Sat', y: 34 }\n                ],\n                xName: 'x', yName: 'y',\n                width: 2, yAxisName: 'yAxis',\n                name: 'Japan',\n                marker: { visible: true, width: 10, height: 10, border: { width: 2, color: '#F8AB1D' } }\n            }\n        ],\n\n        //Initializing Chart title\n        title: 'Weather Condition JPN vs DEU',\n        //Initializing User Interaction Tooltip\n        tooltip: { enable: true },\n        legendSettings: {\n            visible: false\n        },\n        width: Browser.isDevice ? '100%' : '60%',\n        load: (args: ILoadedEventArgs) => {\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n        }\n    });\n    chart.appendTo('#container');\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div id=\"container\" align=\"center\"></div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
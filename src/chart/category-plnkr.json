{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport { Chart, BarSeries, Category, Legend, Tooltip, IPointRenderEventArgs } from '@syncfusion/ej2-charts';\nimport { EmitType } from '@syncfusion/ej2-base';\nChart.Inject(BarSeries, Category, Legend, Tooltip);\n\n/**\n * Category Axis\n */\nlet materialColors: string[] = ['#00bdae', '#404041', '#357cd2', '#e56590', '#f8b883',\n    '#70ad47', '#dd8abd', '#7f84e8', '#7bb4eb', '#ea7a57'];\nlet fabricColors: string[] = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',\n    '#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300'];\nlet labelRender: EmitType<IPointRenderEventArgs> = (args: IPointRenderEventArgs): void => {\n    let selectedTheme: string = location.hash.split('/')[1];\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = fabricColors[args.point.index];\n    } else {\n        args.fill = materialColors[args.point.index];\n    }\n};\n\n    let chart: Chart = new Chart({\n\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            title: 'Country',\n            valueType: 'Category'\n        },\n\n        //Initializing Primary Y Axis\n        primaryYAxis:\n        {\n            title: 'Users in Millions',\n            minimum: 0,\n            maximum: 800,\n            labelFormat: '{value}M',\n            edgeLabelPlacement: 'Shift'\n        },\n\n        //Initializing Chart Series\n        series: [\n            {\n                type: 'Bar',\n                dataSource: [\n                    { x: 'GER', y: 71.7 },\n                    { x: 'RUS', y: 103.1 },\n                    { x: 'BRZ', y: 139.1 },\n                    { x: 'IND', y: 462.1 },\n                    { x: 'CHN', y: 721.4 },\n                    { x: 'USA', y: 286.9 },\n                    { x: 'GBR', y: 60.2 },\n                    { x: 'JPN', y: 115.1 },\n                    { x: 'NGR', y: 97.2 },\n                ],\n                xName: 'x', width: 2,\n                yName: 'y',\n            }\n        ],\n        pointRender: labelRender,\n        //Initializing Chart title\n        title: 'Internet Users â€“ 2016',\n        tooltip: { enable: true, format: '${point.x} : ${point.y}' }\n    });\n    chart.appendTo('#container');\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div id=\"container\"></div>\n    <div style=\"float: right; margin-right: 10px;\">Source:\n       <a href=\"http://www.internetworldstats.com/top20.htm\" target=\"_blank\">www.internetworldstats.com</a>\n    </div>\n</div>\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf\": \"syncfusion:ej2-pdf/dist/ej2-pdf.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport { Chart, LineSeries, DateTime, Logarithmic, Legend, Tooltip, ILoadedEventArgs, ChartTheme } from '@syncfusion/ej2-charts';\nChart.Inject(LineSeries, DateTime, Logarithmic, Legend, Tooltip);\nimport { Browser } from '@syncfusion/ej2-base';\n\n/**\n * Sample for Logarithmic Axis\n */\n\n    let chart: Chart = new Chart({\n\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            labelFormat: 'y',\n            valueType: 'DateTime',\n            edgeLabelPlacement: 'Shift'\n        },\n\n        //Initializing Primary Y Axis\n        primaryYAxis:\n        {\n            valueType: 'Logarithmic',\n            edgeLabelPlacement: 'Shift',\n            minorTicksPerInterval: 5,\n            majorGridLines: { width: 1.5 },\n            minorTickLines: { width: 0, height: 4 },\n            minimum: 0,\n            maximum: 100000,\n            interval: 1,\n            title: Browser.isDevice ? '' : 'Profit',\n            labelFormat: '${value}'\n        },\n\n        //Initializing Chart Series\n        series: [\n            {\n                type: 'Line',\n                dataSource: [\n                    { x: new Date(1995, 0, 1), y: 80 },\n                    { x: new Date(1996, 0, 1), y: 200 },\n                    { x: new Date(1997, 0, 1), y: 400 },\n                    { x: new Date(1998, 0, 1), y: 600 },\n                    { x: new Date(1999, 0, 1), y: 700 },\n                    { x: new Date(2000, 0, 1), y: 1400 },\n                    { x: new Date(2001, 0, 1), y: 2000 },\n                    { x: new Date(2002, 0, 1), y: 4000 },\n                    { x: new Date(2003, 0, 1), y: 6000 },\n                    { x: new Date(2004, 0, 1), y: 8000 },\n                    { x: new Date(2005, 0, 1), y: 11000 }],\n                xName: 'x', width: 2,\n                yName: 'y', name: 'Product X',\n                marker: {\n                    visible: true, height: 10, width: 10\n                }\n            }\n        ],\n\n        //Initializing Chart title\n        title: 'Product X Growth [1995-2005]', legendSettings: { visible: false },\n        //Initializing User Interaction Tooltip\n        tooltip: { enable: true, header: 'Profit' },\n        width : Browser.isDevice ? '100%' : '60%',\n        load: (args: ILoadedEventArgs) => {\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n        }\n    });\n    chart.appendTo('#container');\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/production/demos/styles/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div id=\"container\" align=\"center\"></div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
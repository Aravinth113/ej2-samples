{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport { AccumulationChart, AccumulationLegend, PieSeries, AccumulationDataLabel, IAccLoadedEventArgs } from '@syncfusion/ej2-charts';\nAccumulationChart.Inject(AccumulationLegend, PieSeries, AccumulationDataLabel);\n\n/**\n * Smart labels for Pie sample\n */\n\n    let pie: AccumulationChart = new AccumulationChart({\n        series: [\n            {\n                dataSource: [\n                    { 'x': 'China', y: 26, text: 'China: 26' },\n                    { 'x': 'Russia', y: 19, text: 'Russia: 19' },\n                    { 'x': 'Germany', y: 17, text: 'Germany: 17' },\n                    { 'x': 'Japan', y: 12, text: 'Japan: 12' },\n                    { 'x': 'France', y: 10, text: 'France: 10' },\n                    { 'x': 'South Korea', y: 9, text: 'South Korea: 9' },\n                    { 'x': 'Great Britain', y: 27, text: 'Great Britain: 27' },\n                    { 'x': 'Italy', y: 8, text: 'Italy: 8' },\n                    { 'x': 'Australia', y: 8, text: 'Australia: 8' },\n                    { 'x': 'Netherlands', y: 8, text: 'Netherlands: 8' },\n                    { 'x': 'Hungary', y: 8, text: 'Hungary: 8' },\n                    { 'x': 'Brazil', y: 7, text: 'Brazil: 7' },\n                    { 'x': 'Spain', y: 7, text: 'Spain: 7' },\n                    { 'x': 'Kenya', y: 6, text: 'Kenya: 6' },\n                    { 'x': 'Jamaica', y: 6, text: 'Jamaica: 6' },\n                    { 'x': 'Croatia', y: 5, text: 'Croatia: 5' },\n                    { 'x': 'Cuba', y: 5, text: 'Cuba: 5' },\n                    { 'x': 'NewZealand', y: 4, text: 'New Zealand: 4' },\n                    { 'x': 'Canada', y: 4, text: 'Canada: 4' },\n                    { 'x': 'Uzbekistan', y: 4, text: 'Uzbekistan: 4' },\n                    { 'x': 'Kazakhstan', y: 3, text: 'Kazakhstan: 3' },\n                    { 'x': 'Colombia', y: 3, text: 'Colombia: 3' },\n                    { 'x': 'Switzerland', y: 3, text: 'Switzerland: 3' },\n                    { 'x': 'Iran', y: 3, text: 'Iran: 3' },\n                    { 'x': 'Greece', y: 3, text: 'Greece: 3' },\n                    { 'x': 'Argentina', y: 3, text: 'Argentina: 3' },\n                    { 'x': 'Denmark', y: 2, text: 'Denmark: 2' },\n                    { 'x': 'Sweden', y: 2, text: 'Sweden: 2' },\n                    { 'x': 'South Africa', y: 2, text: 'South Africa: 2' },\n                    { 'x': 'Ukraine', y: 2, text: 'Ukraine: 2' },\n                    { 'x': 'Serbia', y: 2, text: 'Serbia: 2' },\n                    { 'x': 'Poland', y: 2, text: 'Poland: 2' },\n                    { 'x': 'North Korea', y: 2, text: 'North Korea: 2' },\n                    { 'x': 'Belgium', y: 2, text: 'Belgium: 2' },\n                    { 'x': 'Thailand', y: 2, text: 'Thailand: 2' },\n                    { 'x': 'Slovakia', y: 2, text: 'Slovakia`: 2' }\n                ],\n                xName: 'x',\n                yName: 'y',\n                startAngle: 0,\n                endAngle: 360,\n                innerRadius: '0%',\n                dataLabel: {\n                    visible: true, position: 'Outside',\n                    border : { width: 1, color: 'black'},\n                    connectorStyle: { length: '10%' }, name: 'text',\n                },\n            }\n        ],\n        legendSettings: {\n            visible: true,\n            position: 'Right',\n            border: { width: 1, color: 'black' },\n            height: '70%',\n            width: '12%'\n        },\n        title: 'Rio Olympics Gold',\n        load: (args: IAccLoadedEventArgs) => {\n            let selectedTheme: string = location.hash.split('/')[1];\n            args.accumulation.theme = (selectedTheme && selectedTheme.indexOf('fabric') > -1) ? 'Fabric' : 'Material';\n            if (args.accumulation.availableSize.width < 400) {\n                args.accumulation.legendSettings.visible = false;\n            } else {\n                args.accumulation.legendSettings.visible = true;\n            }\n        }\n    });\n    pie.appendTo('#container');\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div id=\"container\"></div>\n</div>\n\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf\": \"syncfusion:ej2-pdf/dist/ej2-pdf.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport {\n    AccumulationTheme, AccumulationChart, AccumulationLegend, PieSeries, AccumulationTooltip, IAccLoadedEventArgs,\n    AccumulationDataLabel\n} from '@syncfusion/ej2-charts';\nAccumulationChart.Inject(AccumulationLegend, PieSeries, AccumulationTooltip, AccumulationDataLabel);\n\n/**\n * Sample for Pie chart\n */\n\n    let pie: AccumulationChart = new AccumulationChart({\n        // Initialize the chart series\n        series: [\n            {\n                dataSource: [\n                    { 'x': 'Chrome', y: 37, text: '37%' }, { 'x': 'UC Browser', y: 17, text: '17%' },\n                    { 'x': 'iPhone', y: 19, text: '19%' },\n                    { 'x': 'Others', y: 4, text: '4%' }, { 'x': 'Opera', y: 11, text: '11%' },\n                    { 'x': 'Android', y: 12, text: '12%' }\n                ],\n                dataLabel: {\n                    visible: true,\n                    position: 'Inside', name: 'text',\n                    font: {\n                        fontWeight: '600'\n                    }\n                },\n                radius: '70%', xName: 'x',\n                yName: 'y', startAngle: 0,\n                endAngle: 360, innerRadius: '0%',\n                explode: true, explodeOffset: '10%', explodeIndex: 0\n            }\n        ],\n        enableSmartLabels: true,\n        legendSettings: {\n            visible: false,\n        },\n        // Initialize tht tooltip\n        tooltip: { enable: true, format: '${point.x} <br> ${point.y} %' },\n        title: 'Mobile Browser Statistics',\n        load: (args: IAccLoadedEventArgs) => {\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.accumulation.theme = <AccumulationTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n        }\n    });\n    pie.appendTo('#container');\n    function anglechange(value: number): void {\n        pie.series[0].startAngle = +value;\n        pie.series[0].endAngle = +value;\n        document.getElementById('anglevalue').innerHTML = value.toString();\n        pie.removeSvg();\n        pie.refreshSeries();\n        pie.refreshChart();\n    }\n    document.getElementById('pieangle').onpointermove = document.getElementById('pieangle').ontouchmove =\n        document.getElementById('pieangle').onchange = (e: Event) => {\n            anglechange(+(document.getElementById('pieangle') as HTMLInputElement).value);\n        };\n    function radiuschange(value: number): void {\n        pie.series[0].radius = value + '%';\n        document.getElementById('radius').innerHTML = (value / 100).toFixed(2);\n        pie.removeSvg();\n        pie.refreshSeries();\n        pie.refreshChart();\n    }\n    document.getElementById('pieradius').onpointermove = document.getElementById('pieradius').ontouchmove =\n        document.getElementById('pieradius').onchange = (e: Event) => {\n            radiuschange(+(document.getElementById('pieradius') as HTMLInputElement).value);\n        };\n    function exploderadius(value: number): void {\n        pie.visibleSeries[0].explodeOffset = value + '%';\n        document.getElementById('exploderadius').innerHTML = (value / 100).toFixed(2);\n        pie.removeSvg();\n        pie.refreshSeries();\n        pie.refreshChart();\n    }\n    document.getElementById('pieexploderadius').onpointermove = document.getElementById('pieexploderadius').ontouchmove =\n        document.getElementById('pieexploderadius').onchange = (e: Event) => {\n            exploderadius(+(document.getElementById('pieexploderadius') as HTMLInputElement).value);\n        };\n    function explodeIndex(value: number): void {\n        pie.visibleSeries[0].explodeIndex = +value;\n        document.getElementById('explodeindex').innerHTML = value.toString();\n        pie.removeSvg();\n        pie.refreshSeries();\n        pie.refreshChart();\n    }\n    document.getElementById('pieexplodeindex').onpointermove = document.getElementById('pieexplodeindex').ontouchmove =\n        document.getElementById('pieexplodeindex').onchange = (e: Event) => {\n            explodeIndex(+(document.getElementById('pieexplodeindex') as HTMLInputElement).value);\n        };\n","index.html":"<!DOCTYPE html><html><head>\n    <meta charset=\"UTF-8\">\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div>\n    <div class=\"col-lg-9 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"container\"></div>\n        </div>\n    </div>\n    <div class=\"col-lg-3 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr style=\"height: 50px\">\n                <td style=\"width: 30%\">\n                    <div>Pie Angle:\n                        <p id=\"anglevalue\" style=\"font-weight: normal;\">0</p>\n                    </div>\n                </td>\n                <td style=\"width: 70%;\">\n                    <div data-role=\"rangeslider\">\n                        <input type=\"range\" name=\"range-min\" id=\"pieangle\" value=\"0\" min=\"0\" max=\"360\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td style=\"width: 30%\">\n                    <div>Outer Radius:\n                        <p id=\"radius\" style=\"font-weight: normal;\">0.70</p>\n                    </div>\n                </td>\n                <td style=\"width: 70%;\">\n                    <div data-role=\"rangeslider\">\n                        <input type=\"range\" name=\"range-min\" id=\"pieradius\" value=\"70\" min=\"0\" max=\"80\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td style=\"width: 30%\">\n                    <div>Explode Radius:\n                        <p id=\"exploderadius\" style=\"font-weight: normal;\">0.1</p>\n                    </div>\n                </td>\n                <td style=\"width: 70%;\">\n                    <div data-role=\"rangeslider\">\n                        <input type=\"range\" name=\"range-min\" id=\"pieexploderadius\" value=\"10\" min=\"0\" max=\"40\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td style=\"width: 30%\">\n                    <div>Explode Index:\n                        <p id=\"explodeindex\" style=\"font-weight: normal;\">0</p>\n                    </div>\n                </td>\n                <td style=\"width: 70%;\">\n                    <div data-role=\"rangeslider\">\n                        <input type=\"range\" name=\"range-min\" id=\"pieexplodeindex\" value=\"0\" min=\"0\" max=\"6\" style=\"width:90%\">\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
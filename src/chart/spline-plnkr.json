{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport {\n    Chart, SplineSeries, ChartAnnotation, Category,\n    Legend, Tooltip, ILoadedEventArgs, ChartTheme\n} from '@syncfusion/ej2-charts';\nimport { Browser } from '@syncfusion/ej2-base';\nChart.Inject(SplineSeries, Category, Legend, Tooltip, ChartAnnotation);\n\n/**\n * Sample for Spline Series\n */\n\n    let chart: Chart = new Chart({\n\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            valueType: 'Category',\n            interval: 1, majorGridLines: { width: 0 },\n            labelIntersectAction: 'Rotate90'\n        },\n        chartArea: {\n            border: {\n                width: 0\n            }\n        },\n        //Initializing Annotations\n        annotations: [{\n            content: '<div id=\"chart_cloud\"><img src=\"http://npmci.syncfusion.com/production/demos/src/chart/images/cloud.png\"  style=\"width: 41px; height: 41px\"/></div>',\n            x: 'Sun', y: 2, coordinateUnits: 'Point', verticalAlignment: 'Top'\n        }, {\n            content: '<div id=\"chart_cloud\"><img src=\"http://npmci.syncfusion.com/production/demos/src/chart/images/sunny.png\"  style=\"width: 41px; height: 41px\"/></div>',\n            x: 'Tue', y: 33, coordinateUnits: 'Point', verticalAlignment: 'Top'\n        }],\n        //Initializing Primary Y Axis\n        primaryYAxis:\n        {\n            minimum: 0,\n            maximum: 40,\n            interval: 10,\n            labelFormat: '{value}Â°C',\n            lineStyle: { width: 0 },\n            majorTickLines: { width: 0 },\n            minorTickLines: { width: 0 }\n        },\n\n        //Initializing Chart Series\n        series: [\n            {\n                type: 'Spline',\n                dataSource: [\n                    { x: 'Sun', y: 15 }, { x: 'Mon', y: 22 },\n                    { x: 'Tue', y: 32 },\n                    { x: 'Wed', y: 31 },\n                    { x: 'Thu', y: 29 }, { x: 'Fri', y: 24 },\n                    { x: 'Sat', y: 18 },\n                ],\n                xName: 'x', width: 2, marker: {\n                    visible: true,\n                    width: 10,\n                    height: 10\n                },\n                yName: 'y', name: 'Max Temp',\n            },\n            {\n                type: 'Spline',\n                dataSource: [\n                    { x: 'Sun', y: 10 }, { x: 'Mon', y: 18 },\n                    { x: 'Tue', y: 28 },\n                    { x: 'Wed', y: 28 },\n                    { x: 'Thu', y: 26 }, { x: 'Fri', y: 20 },\n                    { x: 'Sat', y: 15 }\n                ],\n                xName: 'x', width: 2, marker: {\n                    visible: true,\n                    width: 10,\n                    height: 10\n                },\n                yName: 'y', name: 'Avg Temp',\n            },\n            {\n                type: 'Spline',\n                dataSource: [\n                    { x: 'Sun', y: 2 }, { x: 'Mon', y: 12 },\n                    { x: 'Tue', y: 22 },\n                    { x: 'Wed', y: 23 },\n                    { x: 'Thu', y: 19 }, { x: 'Fri', y: 13 },\n                    { x: 'Sat', y: 8 },\n                ],\n                xName: 'x', width: 2, marker: {\n                    visible: true,\n                    width: 10,\n                    height: 10\n                },\n                yName: 'y', name: 'Min Temp',\n            }\n        ],\n\n        //Initializing Chart title\n        title: 'NC Weather Report - 2016',\n        //Initializing User Interaction Tooltip\n        tooltip: { enable: true },\n        legendSettings: { toggleVisibility: false },\n        width: Browser.isDevice ? '100%' : '60%',\n        load: (args: ILoadedEventArgs) => {\n            let selectedTheme: string = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n        }\n    });\n    chart.appendTo('#container');\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/production/demos/styles/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div id=\"container\" align=\"center\"></div>\n    <div style=\"float: right; margin-right: 10px;\">Source:\n       <a href=\"https://www.worldweatheronline.com/mooresville-weather/north-carolina/us.aspx\" target=\"_blank\">www.worldweatheronline.com</a>\n    </div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n    #container_Series_0_Point_2_Symbol {\n        -webkit-animation: opac 1s ease-out infinite;\n        animation: opac 1s ease-out infinite;\n    }\n\n    #container_Series_2_Point_0_Symbol {\n        -webkit-animation: opac 1s ease-out infinite;\n        animation: opac 1s ease-in-out infinite;\n    }\n\n    @keyframes opac {\n        0% {\n            stroke-opacity: 1;\n            stroke-width: 0px;\n        }\n        100% {\n            stroke-opacity: 0;\n            stroke-width: 10px;\n        }\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport { Chart, BubbleSeries, Tooltip, IPointRenderEventArgs } from '@syncfusion/ej2-charts';\nimport { EmitType } from '@syncfusion/ej2-base';\nChart.Inject(BubbleSeries, Tooltip);\n\nlet materialColors: string[] = ['#00bdae', '#404041', '#357cd2', '#e56590', '#f8b883', '#70ad47', '#dd8abd', '#7f84e8', '#7bb4eb',\n'#ea7a57', '#404041', '#00bdae' ];\nlet fabricColors: string[] = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',\n    '#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300', '#4472c4', '#70ad47', '#ffc000', '#ed7d31'];\nlet labelRender: EmitType<IPointRenderEventArgs> = (args: IPointRenderEventArgs): void => {\n    let selectedTheme: string = location.hash.split('/')[1];\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\n        args.fill = fabricColors[args.point.index];\n    } else {\n        args.fill = materialColors[args.point.index];\n    }\n};\n\n/**\n * Bubble series\n */\n\n    let chart: Chart = new Chart({\n\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            title: 'Literacy Rate',\n            minimum: 60,\n            maximum: 100,\n            interval: 5\n        },\n\n        //Initializing Primary Y Axis\n        primaryYAxis: {\n            title: 'GDP growth rate',\n            minimum: -2,\n            maximum: 16,\n            interval: 2\n        },\n\n        //Initializing Chart Series\n        series: [\n            {\n                type: 'Bubble',\n                dataSource: [{ x: 92.2, y: 7.8, size: 1.347, text: 'China' },\n                { x: 74, y: 6.5, size: 1.241, text: 'India' },\n                { x: 90.4, y: 6.0, size: 0.238, text: 'Indonesia' },\n                { x: 99.4, y: 2.2, size: 0.312, text: 'US' },\n                { x: 88.6, y: 1.3, size: 0.197, text: 'Brazil' },\n                { x: 99, y: 0.7, size: 0.0818, text: 'Germany' },\n                { x: 72, y: 2.0, size: 0.0826, text: 'Egypt' },\n                { x: 99.6, y: 3.4, size: 0.143, text: 'Russia' },\n                { x: 99, y: 0.2, size: 0.128, text: 'Japan' },\n                { x: 86.1, y: 4.0, size: 0.115, text: 'Mexico' },\n                { x: 92.6, y: 6.6, size: 0.096, text: 'Philippines' },\n                { x: 61.3, y: 14.5, size: 0.162, text: 'Nigeria' }],\n                xName: 'x', yName: 'y', size: 'size', name: 'pound',\n                marker: { dataLabel: { name: 'text' } }\n            },\n        ],\n        pointRender: labelRender,\n        title: 'World Countries Details',\n        tooltip: {\n            enable: true,\n            format: '${point.text}<br>Literacy Rate:${point.x}%<br>GDP Annual Growth Rate:${point.y}<br>Population: ${point.size} Billion'\n        },\n        legendSettings: { visible: false }\n    });\n    chart.appendTo('#container');\n","index.html":"<html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div id=\"container\"></div>\n    <div style=\"float: right; margin-right: 10px; margin-top: -5px\">\n    </div>\n</div>\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div class=\"content-wrapper\" style=\"width: 100%\">\n        <div id=\"diagram\"></div>\n    </div>\n</div>\n\n\n\n</div></body></html>","index.ts":"{{ripple}}\r\n/**\r\n * Venn Diagram\r\n */\r\n\r\nimport { Diagram, BasicShapeModel, NodeModel, SnapConstraints, DiagramTools } from '@syncfusion/ej2-diagrams';\r\n\r\n\r\n    \r\n    //Initialize shape\r\n    let shape: BasicShapeModel = { type: 'Basic', shape: 'Ellipse' };\r\n    //Initialize Diagram Nodes\r\n    let nodes: NodeModel[] = [\r\n        {\r\n            id: 'datascience', offsetX: 450, offsetY: 232, width: 400, height: 400,\r\n            annotations: [{ content: 'Data Science', offset: { x: 0.5, y: 0.10 } }],\r\n            shape: shape, style: { fill: '#f2f2f2', strokeColor: '#acacac', strokeWidth: 1 }\r\n        },\r\n        {\r\n            id: 'trignometry', offsetX: 515, offsetY: 205, width: 200, height: 200, shape: shape,\r\n            annotations: [\r\n                { content: 'Trignometry', offset: { x: 0.5, y: 0.4 }, horizontalAlignment: 'Left' },\r\n                { content: 'Thesis', offset: { x: 0.45, y: 0.8 } }\r\n            ],\r\n            style: { fill: '#feb42f', opacity: 0.2, strokeColor: '#feb42f' }\r\n        },\r\n        {\r\n            id: 'expertise', offsetX: 445, offsetY: 290, width: 200, height: 200, shape: shape,\r\n            annotations: [{ content: 'Expertise', offset: { x: 0.5, y: 0.7 }, verticalAlignment: 'Top' }],\r\n            style: { fill: '#6acbd4', opacity: 0.2, strokeColor: '#6acbd4' }\r\n        },\r\n        {\r\n            id: 'programming', offsetX: 388, offsetY: 205, width: 200, height: 200, shape: shape,\r\n            annotations: [\r\n                { content: 'Programming ', offset: { x: 0.5, y: 0.4 }, horizontalAlignment: 'Right' },\r\n                { content: 'Assembly', offset: { x: 0.7, y: 0.35 }, horizontalAlignment: 'Left' },\r\n                { content: 'Horizon', offset: { x: 0.7, y: 0.6 }, horizontalAlignment: 'Left' },\r\n                { content: 'Middleware', offset: { x: 0.5, y: 0.8 } }\r\n            ],\r\n            style: { fill: '#ed1d79', opacity: 0.2, strokeColor: '#ed1d79' }\r\n        }\r\n    ];\r\n\r\n    //Initializes diagram control\r\n    let diagram: Diagram = new Diagram({\r\n        width: '100%', height: 580, nodes: nodes,\r\n        snapSettings: { constraints: SnapConstraints.None },\r\n        tool: DiagramTools.ZoomPan\r\n    });\r\n    diagram.appendTo('#diagram');\r\n    diagram.fitToPage();\r\n"}
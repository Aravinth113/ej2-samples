{"index.ts":"import { VirtualScroll, Grid } from '@syncfusion/ej2-grids';\n\n/**\n * virtualscrolling sample\n */\nGrid.Inject(VirtualScroll);\n\n\n    let virtualData: Object[] = [];\n    let names: string[] = ['hardire', 'abramjo01', 'aubucch01', 'Hook', 'Rumpelstiltskin', 'Belle', 'Emma', 'Regina', 'Aurora', 'Elsa',\n    'Anna', 'Snow White', 'Prince Charming', 'Cora', 'Zelena', 'August', 'Mulan', 'Graham', 'Discord', 'Will', 'Robin Hood',\n    'Jiminy Cricket', 'Henry', 'Neal', 'Red', 'Aaran', 'Aaren', 'Aarez', 'Aarman', 'Aaron', 'Aaron-James', 'Aarron', 'Aaryan', 'Aaryn',\n    'Aayan', 'Aazaan', 'Abaan', 'Abbas', 'Abdallah', 'Abdalroof', 'Abdihakim', 'Abdirahman', 'Abdisalam', 'Abdul', 'Abdul-Aziz',\n    'Abdulbasir', 'Abdulkadir', 'Abdulkarem', 'Abdulkhader', 'Abdullah', 'Abdul-Majeed', 'Abdulmalik', 'Abdul-Rehman', 'Abdur',\n    'Abdurraheem', 'Abdur-Rahman', 'Abdur-Rehmaan', 'Abel', 'Abhinav', 'Abhisumant', 'Abid', 'Abir', 'Abraham', 'Abu', 'Abubakar',\n    'Ace', 'Adain', 'Adam', 'Adam-James', 'Addison', 'Addisson', 'Adegbola', 'Adegbolahan', 'Aden', 'Adenn', 'Adie', 'Adil', 'Aditya',\n    'Adnan', 'Adrian', 'Adrien', 'Aedan', 'Aedin', 'Aedyn', 'Aeron', 'Afonso', 'Ahmad', 'Ahmed', 'Ahmed-Aziz', 'Ahoua', 'Ahtasham',\n    'Aiadan', 'Aidan', 'Aiden', 'Aiden-Jack', 'Aiden-Vee'];\n    for (let i: number = 0; i < 5000; i++) {\n        virtualData.push({\n            'FIELD1': names[Math.floor(Math.random() * names.length)],\n            'FIELD2': 1967 + (i % 10),\n            'FIELD3': Math.floor(Math.random() * 200),\n            'FIELD4': Math.floor(Math.random() * 100),\n            'FIELD5': Math.floor(Math.random() * 2000),\n            'FIELD6': Math.floor(Math.random() * 1000),\n            'FIELD7': Math.floor(Math.random() * 100),\n            'FIELD8': Math.floor(Math.random() * 10),\n            'FIELD9': Math.floor(Math.random() * 10),\n            'FIELD10': Math.floor(Math.random() * 100),\n            'FIELD11': Math.floor(Math.random() * 100),\n            'FIELD12': Math.floor(Math.random() * 1000),\n            'FIELD13': Math.floor(Math.random() * 10),\n            'FIELD14': Math.floor(Math.random() * 10),\n            'FIELD15': Math.floor(Math.random() * 1000),\n            'FIELD16': Math.floor(Math.random() * 200),\n            'FIELD17': Math.floor(Math.random() * 300),\n            'FIELD18': Math.floor(Math.random() * 400),\n            'FIELD19': Math.floor(Math.random() * 500),\n            'FIELD20': Math.floor(Math.random() * 700),\n            'FIELD21': Math.floor(Math.random() * 800),\n            'FIELD22': Math.floor(Math.random() * 1000),\n            'FIELD23': Math.floor(Math.random() * 2000),\n            'FIELD24': Math.floor(Math.random() * 150),\n            'FIELD25': Math.floor(Math.random() * 1000),\n            'FIELD26': Math.floor(Math.random() * 100),\n            'FIELD27': Math.floor(Math.random() * 400),\n            'FIELD28': Math.floor(Math.random() * 600),\n            'FIELD29': Math.floor(Math.random() * 500),\n            'FIELD30': Math.floor(Math.random() * 300),\n        });\n    }\n    let grid: Grid = new Grid(\n        {\n            dataSource: virtualData,\n            enableVirtualization: true,\n            enableColumnVirtualization: true,\n            height: 400,\n            columns: [\n                { field: 'FIELD1', headerText: 'Player Name', width: 140 },\n                { field: 'FIELD2', headerText: 'Year', width: 120 },\n                { field: 'FIELD3', headerText: 'Stint', width: 120 },\n                { field: 'FIELD4', headerText: 'TMID', width: 120 },\n                { field: 'FIELD5', headerText: 'LGID', width: 120 },\n                { field: 'FIELD6', headerText: 'GP', width: 120 },\n                { field: 'FIELD7', headerText: 'GS', width: 120 },\n                { field: 'FIELD8', headerText: 'Minutes', width: 120 },\n                { field: 'FIELD9', headerText: 'Points', width: 120 },\n                { field: 'FIELD10', headerText: 'oRebounds', width: 130 },\n                { field: 'FIELD11', headerText: 'dRebounds', width: 130 },\n                { field: 'FIELD12', headerText: 'Rebounds', width: 120 },\n                { field: 'FIELD13', headerText: 'Assists', width: 120 },\n                { field: 'FIELD14', headerText: 'Steals', width: 120 },\n                { field: 'FIELD15', headerText: 'Blocks', width: 120 },\n                { field: 'FIELD16', headerText: 'Turnovers', width: 130 },\n                { field: 'FIELD17', headerText: 'PF', width: 130 },\n                { field: 'FIELD18', headerText: 'fgAttempted', width: 150 },\n                { field: 'FIELD19', headerText: 'fgMade', width: 120 },\n                { field: 'FIELD20', headerText: 'ftAttempted', width: 150 },\n                { field: 'FIELD21', headerText: 'ftMade', width: 120 },\n                { field: 'FIELD22', headerText: 'ThreeAttempted', width: 150 },\n                { field: 'FIELD23', headerText: 'ThreeMade', width: 130 },\n                { field: 'FIELD24', headerText: 'PostGP', width: 120 },\n                { field: 'FIELD25', headerText: 'PostGS', width: 120 },\n                { field: 'FIELD26', headerText: 'PostMinutes', width: 120 },\n                { field: 'FIELD27', headerText: 'PostPoints', width: 130 },\n                { field: 'FIELD28', headerText: 'PostoRebounds', width: 130 },\n                { field: 'FIELD29', headerText: 'PostdRebounds', width: 130 },\n                { field: 'FIELD30', headerText: 'PostRebounds', width: 130 }]\n        });\n    grid.appendTo('#Grid');\n\n\n","index.html":"<html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"Grid\">\n        </div>\n    </div>\n</div>\n\n\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
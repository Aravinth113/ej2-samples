{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport { Grid, Page, Selection } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataV4Adaptor } from '@syncfusion/ej2-data';\n\nGrid.Inject(Page, Selection);\n\n/**\n * RemoteData sample\n */\n\n    let data: Object = new DataManager({\n        url: 'http://services.odata.org/V4/Northwind/Northwind.svc/Products',\n        adaptor: new ODataV4Adaptor,\n        crossDomain: true\n    });\n    let grid: Grid = new Grid(\n        {\n            dataSource: data,\n            allowPaging: true,\n            actionBegin: show,\n            actionComplete: hide,\n            created: show,\n            dataBound: hide,\n            columns: [\n                { field: 'ProductID', headerText: 'Product ID', width: 130, textAlign: 'right' },\n                { field: 'ProductName', headerText: 'Product Name', width: 170 },\n                { field: 'UnitPrice', headerText: 'Unit Price', width: 135, textAlign: 'right', format: 'C2', },\n                { field: 'UnitsInStock', headerText: 'Units In Stock', width: 160, textAlign: 'right' },\n                {\n                    field: 'Discontinued', headerText: 'Discontinued', width: 150, textAlign: 'center', type: 'boolean',\n                    displayAsCheckBox: true\n                },\n            ],\n            pageSettings: { pageCount: 5 }\n        });\n    grid.appendTo('#Grid');\n    function show(): void {\n        let div: HTMLElement = document.getElementById('waitingpopup');\n        let popup: HTMLElement = document.getElementById('popup');\n        let width: number = grid.element.offsetWidth;\n        let height: number = grid.element.offsetHeight;\n        popup.style.width = width + 'px';\n        popup.style.height = height + 'px';\n        div.style.top = (height / 2 - 25) + 'px';\n        div.style.left = (width / 2 - 25) + 'px';\n        popup.style.display = '';\n    }\n    function hide(): void {\n        let popup: HTMLElement = document.getElementById('popup') as HTMLElement;\n        popup.style.display = 'none';\n    }\n\n\n","index.html":"<html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<style>\n    .waitingpopup {\n        position: absolute;\n        top: 0;\n        left: 0;\n        background-color: #fff;\n        border-radius: 50%;\n        box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n        width: 50px;\n        height: 50px;\n    }\n    \n    .image {\n        position: absolute;\n        background-repeat: no-repeat;\n        background-image: url('src/grid/images/Medium-36px-spin.gif');\n        background-position: center;\n        width: 50px;\n        height: 50px;\n        padding: 6px;\n    }\n    \n    #popup {\n        position: absolute;\n        background-color: transparent;\n        z-index: 100;\n    }\n</style>\n<div class=\"control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"Grid\">\n            <div id=\"popup\">\n                <div id=\"waitingpopup\" class=\"waitingpopup\">\n                    <span id=\"gif\" class=\"image\"></span>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n\n</div></body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
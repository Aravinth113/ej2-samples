{"index.html":"<html><head><link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"col-lg-12 control-section\">\n    <div class=\"e-sample-resize-container\" id=\"dialog_target\">\n        <div id=\"alertDialog\"></div>\n        <div id=\"tab_wizard\"> </div>\n        <div id=\"booking\" style=\"display:none;\">\n            <div class=\"wizard-title\">Plan your journey</div>\n            <div class=\"responsive-align\">\n                <div class=\"row\">\n                    <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6 search-item\">\n                        <input id=\"startPoint\" class=\"e-input\" type=\"text\">\n                    </div>\n                    <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6 search-item\">\n                        <input id=\"endPoint\" class=\"e-input\" type=\"text\">\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6 search-item\">\n                        <input id=\"journey_date\" class=\"e-input\" type=\"text\">\n                    </div>\n                    <div class=\"col-xs-6 col-sm-6 col-lg-6 col-md-6 search-item\">\n                        <input id=\"ticket_type\" class=\"e-input\" type=\"text\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"btn-container\">\n                <button id=\"searchNext\" class=\"e-btn\">Search Train</button>\n            </div>\n\n            <span id=\"err1\"></span>\n        </div>\n    </div>\n    <div id=\"selectTrain\" style=\"display:none;\">\n        <div class=\"wizard-title\">Select the train from the list </div>\n        <div id=\"availableTrain\"></div>\n        <br>\n        <div class=\"btn-container\">\n            <button id=\"goToSearch\" class=\"e-btn\">Back</button>\n            <button id=\"bookTickets\" class=\"e-btn\">Continue</button>\n        </div>\n        <span id=\"err2\"></span>\n    </div>\n    <div id=\"details\" style=\"display:none;\">\n        <div class=\"details-page wizard-title\">Enter the passenger details</div>\n        <div id=\"PassengersList\">\n            <table id=\"passenger-table\">\n                <colgroup>\n                    <col>\n                    <col>\n                    <col>\n                    <col>\n                    <col>\n                    <col>\n                </colgroup>\n                <thead>\n                    <tr>\n                        <th class=\"name-header\">Name</th>\n                        <th class=\"age-header\">Age</th>\n                        <th class=\"gender-header\">Gender</th>\n                        <th class=\"type-header\">Berth Preference</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>\n                            <input id=\"pass_name1\" class=\"e-input\" type=\"text\" placeholder=\"Passenger Name\">\n                        </td>\n                        <td>\n                            <input id=\"pass_age1\" class=\"e-input\">\n                        </td>\n                        <td>\n                            <input id=\"pass_gender1\" type=\"text\">\n                        </td>\n                        <td>\n                            <input id=\"pass_berth1\" type=\"text\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <input id=\"pass_name2\" class=\"e-input\" type=\"text\" placeholder=\"Passenger Name\">\n                        </td>\n                        <td>\n                            <input id=\"pass_age2\" class=\"e-input\">\n                        </td>\n                        <td>\n                            <input id=\"pass_gender2\" type=\"text\">\n                        </td>\n                        <td>\n                            <input id=\"pass_berth2\" type=\"text\">\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <input id=\"pass_name3\" class=\"e-input\" type=\"text\" placeholder=\"Passenger Name\">\n                        </td>\n                        <td>\n                            <input id=\"pass_age3\" class=\"e-input\">\n                        </td>\n                        <td>\n                            <input id=\"pass_gender3\" type=\"text\">\n                        </td>\n                        <td>\n                            <input id=\"pass_berth3\" type=\"text\">\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <br>\n        <div class=\"btn-container\">\n            <button id=\"goBackToBook\" class=\"e-btn\">Back</button>\n            <button id=\"confirmTickets\" class=\"e-btn\">Continue</button>\n        </div>\n        <span id=\"err3\"></span>\n    </div>\n    <div id=\"confirm\" style=\"display:none;\">\n        <div class=\"tab-title1 wizard-title\">Confirm the details and proceed</div>\n        <div id=\"ticketDetailGrid\"></div>\n        <div id=\"amount\"></div>\n        <br>\n        <div class=\"btn-container\">\n            <button id=\"goBackDetails\" class=\"e-btn\">Back</button>\n            <button id=\"makePayment\" class=\"e-btn\">Pay</button>\n        </div>\n    </div>\n</div>\n\n\n<style>\n    .e-content .e-item {\n        font-size: 12px;\n        margin: 10px;\n    }\n    #amount {\n        text-align: right;\n        font-size: 15px;\n        padding: 15px 0px;\n    }\n    #passenger-table th {\n        text-align: center;\n        font-size: 14px;\n        font-weight: 400;\n        border: 1px solid gainsboro;\n    }\n    #passenger-table td, th {\n        padding: 10px;\n    }\n    #passenger-table td {\n        border: 1px solid gainsboro;\n    }\n    .name-header {\n        width: 200px;\n    }\n    .age-header {\n        width: 80px;\n    }\n    .gender-header {\n        width: 120px;\n    }\n    .type-header {\n        width: 150px;\n    }\n    .btn-container {\n        text-align: center;\n    }\n    .search-item {\n        padding-right: 50px;\n        padding-bottom: 20px;\n    }\n    .item-title {\n        font-weight: 500;\n        padding-top: 10px;\n    }\n    @media (max-width: 450px) {\n\n        .responsive-align {\n            width: 75%;\n            margin: 0 auto;\n        }\n        .search-item {\n            padding: 0 0 20px 0;\n            width: 100%;\n        }\n    }\n    #err1,\n    #err2,\n    #err3 {\n        font-weight: bold;\n        color: red;\n        display: block;\n        margin-top: 15px;\n    }\n    .wizard-title {\n        font-size: 15px;\n    }\n    #PassengersList {\n        overflow: auto;\n    }\n    #passenger-table {\n        min-width: 500px;\n        width: 100%;\n    }\n</style>\n\n</div></body></html>","index.ts":"{{ripple}}\r\n/**\r\n *  Tab Wizard sample\r\n */\r\n// tslint:disable:max-line-length\r\nimport { Dialog } from '@syncfusion/ej2-popups';\r\nimport { Tab, SelectEventArgs } from '@syncfusion/ej2-navigations';\r\nimport { DatePicker } from '@syncfusion/ej2-calendars';\r\nimport { NumericTextBox } from '@syncfusion/ej2-inputs';\r\nimport { Grid, RowSelectEventArgs } from '@syncfusion/ej2-grids';\r\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\r\nimport { isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\r\n\r\nlet tabObj: Tab;\r\nlet availTrainGrid: Grid;\r\nlet ticketDetailGrid: Grid;\r\nlet endPoint: DropDownList;\r\nlet journeyDate: DatePicker;\r\nlet ticketType: DropDownList;\r\nlet startPoint: DropDownList;\r\nlet alertDlg: Dialog;\r\nlet today : Date = new Date();\r\nlet locations: any;\r\nlet selectedTrain: any;\r\n\r\nlet quota: any = [\r\n    { id: '1', text: 'Business Class' },\r\n    { id: '2', text: 'Economy Class' },\r\n    { id: '3', text: 'Common Class' }\r\n];\r\nlet gender: any = [\r\n   { id: '1', text: 'Male' },\r\n   { id: '2', text: 'Female' }\r\n];\r\nlet berths: any = [\r\n   { id: '1', text: 'Upper' },\r\n   { id: '2', text: 'Lower' },\r\n   { id: '3', text: 'Middle' },\r\n   { id: '4', text: 'Window' },\r\n   { id: '5', text: 'Aisle' }\r\n];\r\nlet cities: any = [\r\n    {name: 'Chicago', fare: 300} ,\r\n    {name: 'San Francisco', fare: 125 },\r\n    {name: 'Los Angeles', fare: 175 },\r\n    {name: 'Seattle', fare: 250},\r\n    {name: 'Florida', fare: 150}\r\n];\r\n\r\nfunction renderComponents(): void {\r\n    /* Initialize Tab with disabled headers for the wizard */\r\n    tabObj = new Tab({ heightAdjustMode: 'None', height: 390, showCloseButton: false,\r\n        selecting: tabSelecting,\r\n        items: [\r\n            { header: { 'text': 'New Booking' }, content: '#booking' },\r\n            { header: { 'text': 'Train List' }, content: '#selectTrain', disabled: true },\r\n            { header: { 'text': 'Add Passenger' }, content: '#details', disabled: true },\r\n            { header: { 'text': 'Make Payment' }, content: '#confirm', disabled: true }\r\n        ]\r\n    });\r\n    tabObj.appendTo('#tab_wizard');\r\n    /* Initialize the components for creating wizard */\r\n    startPoint = new DropDownList({\r\n        width: '100%', dataSource: cities, floatLabelType: 'Auto', placeholder: 'From',\r\n        fields: { text: 'name', value: 'name' }\r\n    });\r\n    startPoint.appendTo('#startPoint');\r\n    endPoint = new DropDownList({\r\n        width: '100%', dataSource: cities, floatLabelType: 'Auto', placeholder: 'To',\r\n        fields: { text: 'name', value: 'name' }\r\n    });\r\n    endPoint.appendTo('#endPoint');\r\n    journeyDate = new DatePicker({\r\n        width: '100%', floatLabelType: 'Auto', placeholder: 'Journey Date', min: new Date(today.getTime()),\r\n        max: new Date(today.getTime() + 60 * 24 * 60 * 60 * 1000),\r\n        value: new Date(),\r\n    });\r\n    journeyDate.appendTo('#journey_date');\r\n    ticketType = new DropDownList({\r\n        dataSource: quota, placeholder: 'Ticket Type', floatLabelType: 'Auto', fields: { text: 'text', value: 'text' }\r\n    });\r\n    ticketType.appendTo('#ticket_type');\r\n    alertDlg = new Dialog({\r\n        header: 'Success', width: 250, isModal: true, visible: false, showCloseIcon: true,\r\n        content: 'Your payment successfully processed',  target: document.getElementById('dialog_target'), created: dlgCreated\r\n    });\r\n    alertDlg.appendTo('#alertDialog');\r\n    alertDlg.hide();\r\n    availTrainGrid = new Grid({\r\n        width: '100%',\r\n        columns: [\r\n            { field: 'TrainNo', headerText: 'Train No', width: 120, type: 'number' },\r\n            { field: 'Name', width: 140, headerText: 'Name' },\r\n            { field: 'Departure', headerText: 'Departure', width: 120 },\r\n            { field: 'Arrival', headerText: 'Arrival', width: 140 },\r\n            { field: 'Availability', headerText: 'Availability', width: 140, type: 'number' }\r\n        ],\r\n        rowSelected: trainSelected\r\n    });\r\n    availTrainGrid.appendTo('#availableTrain');\r\n    let age1: NumericTextBox = new NumericTextBox({ min: 1, max: 100, value: 18, format: 'n0', showSpinButton: false });\r\n    age1.appendTo('#pass_age1');\r\n    let age2: NumericTextBox = new NumericTextBox({ min: 1, max: 100, value: 18, format: 'n0', showSpinButton: false });\r\n    age2.appendTo('#pass_age2');\r\n    let age3: NumericTextBox = new NumericTextBox({ min: 1, max: 100, value: 18, format: 'n0', showSpinButton: false });\r\n    age3.appendTo('#pass_age3');\r\n    let gender1: DropDownList = new DropDownList({\r\n        dataSource: gender, text: 'Male', fields: { text: 'text', value: 'text' }\r\n    });\r\n    gender1.appendTo('#pass_gender1');\r\n    let gender2: DropDownList = new DropDownList({\r\n        dataSource: gender, text: 'Male', fields: { text: 'text', value: 'text' }\r\n    });\r\n    gender2.appendTo('#pass_gender2');\r\n    let gender3: DropDownList = new DropDownList({\r\n        dataSource: gender, text: 'Male', fields: { text: 'text', value: 'text' }\r\n    });\r\n    gender3.appendTo('#pass_gender3');\r\n    let berth1: DropDownList = new DropDownList({\r\n        dataSource: berths, placeholder: 'Optional', fields: { text: 'text', value: 'text' }\r\n    });\r\n    berth1.appendTo('#pass_berth1');\r\n    let berth2: DropDownList = new DropDownList({\r\n        dataSource: berths, placeholder: 'Optional', fields: { text: 'text', value: 'text' }\r\n    });\r\n    berth2.appendTo('#pass_berth2');\r\n    let berth3: DropDownList = new DropDownList({\r\n        dataSource: berths, placeholder: 'Optional', fields: { text: 'text', value: 'text' }\r\n    });\r\n    berth3.appendTo('#pass_berth3');\r\n    ticketDetailGrid = new Grid({\r\n        width: '100%',\r\n        columns: [\r\n            { field: 'TrainNo', headerText: 'Train No', width: 120, type: 'number' },\r\n            { field: 'PassName', width: 140, headerText: 'Name' },\r\n            { field: 'Gender', headerText: 'Gender', width: 120 },\r\n            { field: 'Berth', headerText: 'Berth', width: 140 }\r\n        ],\r\n    });\r\n    ticketDetailGrid.appendTo('#ticketDetailGrid');\r\n    document.getElementById('searchNext').onclick = (e: any) => { tabNavigations(e); };\r\n    document.getElementById('bookTickets').onclick = (e: any) => { tabNavigations(e); };\r\n    document.getElementById('confirmTickets').onclick = (e: any) => { tabNavigations(e); };\r\n    document.getElementById('makePayment').onclick = (e: any) => { tabNavigations(e); };\r\n    document.getElementById('goToSearch').onclick = (e: any) => { tabNavigations(e); };\r\n    document.getElementById('goBackToBook').onclick = (e: any) => { tabNavigations(e); };\r\n    document.getElementById('goBackDetails').onclick = (e: any) => { tabNavigations(e); };\r\n}\r\nfunction tabSelecting(e: SelectEventArgs): void {\r\n    if (e.isSwiped) {\r\n        e.cancel = true;\r\n    }\r\n}\r\nfunction dlgCreated(): void {\r\n  alertDlg.buttons = [{\r\n    buttonModel: { content: 'Ok', isPrimary: true },\r\n      click: (() => {\r\n        alertDlg.hide();\r\n        tabObj.enableTab(0, true);\r\n        tabObj.enableTab(1, false);\r\n        tabObj.enableTab(2, false);\r\n        tabObj.enableTab(3, false);\r\n        tabObj.select(0);\r\n      })\r\n  }];\r\n}\r\nfunction tabNavigations(args: any): void {\r\n    switch (args.target.id) {\r\n        case 'searchNext':\r\n        /* Validate the Source, Destination, Date and Class chosen and proceed only if all the fields are selected */\r\n            if (!isNOU(startPoint.value) && !isNOU(endPoint.value) &&\r\n                !isNOU(ticketType.value) && !isNOU(journeyDate.value)) {\r\n                if (!isNOU(startPoint.value) && startPoint.value === endPoint.value) {\r\n                    document.getElementById('err1').innerText = '* Arrival point can\\'t be same as Departure';\r\n                } else {\r\n                    tabObj.enableTab(1, true);\r\n                    tabObj.enableTab(0, false);\r\n                    filterTrains(args);\r\n                    document.getElementById('err1').innerText = '';\r\n                    document.getElementById('err2').innerText = '';\r\n                }\r\n            } else {\r\n                document.getElementById('err1').innerText = '* Please fill all the details before proceeding';\r\n            }\r\n            break;\r\n        case 'bookTickets':\r\n        /* Based on the selected station generate Grid content to display trains available */\r\n            if (availTrainGrid.getSelectedRecords() === undefined || availTrainGrid.getSelectedRecords().length === 0) {\r\n                document.getElementById('err2').innerText = '* Select your convenient train';\r\n            } else {\r\n                tabObj.enableTab(2, true);\r\n                tabObj.enableTab(1, false);\r\n                document.getElementById('err2').innerText = '';\r\n            }\r\n            break;\r\n        case 'confirmTickets':\r\n        /* Get the Passenger details and validate the fields must not be left empty */\r\n            let name: any = document.getElementById('pass_name1');\r\n            let age: any = document.getElementById('pass_age1');\r\n            let gender: any = document.getElementById('pass_gender1');\r\n            if (name.value === '' || age.value === '' || gender.value === '') {\r\n                document.getElementById('err3').innerText = '* Please enter passenger details';\r\n            } else {\r\n                tabObj.enableTab(3, true);\r\n                tabObj.enableTab(2, false);\r\n                document.getElementById('err3').innerText = '';\r\n                finalizeDetails(args);\r\n            }\r\n            break;\r\n        case 'makePayment':\r\n            alertDlg.show();\r\n            break;\r\n        case 'goToSearch':\r\n        /* Go back to change class, date or boarding places */\r\n            selectedTrain = [];\r\n            tabObj.enableTab(0, true);\r\n            tabObj.select(0);\r\n            tabObj.enableTab(1, false);\r\n            break;\r\n        case 'goBackToBook':\r\n        /* Change the preferred train chosen already */\r\n            tabObj.enableTab(1, true);\r\n            tabObj.select(1);\r\n            tabObj.enableTab(2, false);\r\n            break;\r\n        case 'goBackDetails':\r\n        /* Update passenger detail before confirming the payment */\r\n            tabObj.enableTab(2, true);\r\n            tabObj.select(2);\r\n            tabObj.enableTab(3, false);\r\n            break;\r\n    }\r\n}\r\nfunction filterTrains(args: any): void {\r\n    /* Generating trains based on source and destination chosen */\r\n    let result: Object[] = [];\r\n    let fromCity: string = startPoint.text;\r\n    let toCity: string = endPoint.text;\r\n    let count: number = Math.floor((Math.random() * 3) + 2);\r\n    for (let i: number = 0; i < count; i++) {\r\n        let details : any = [];\r\n        details.TrainNo = Math.floor((Math.random() * 20) + 19000);\r\n        details.Name = 'Train ' + i;\r\n        details.Departure = fromCity;\r\n        details.Arrival = toCity;\r\n        details.Availability = Math.floor((Math.random() * 20) + 20);\r\n        result.push(details);\r\n    }\r\n    availTrainGrid.dataSource = result;\r\n}\r\nfunction finalizeDetails(args: any): void {\r\n    /* Get the passenger details and update table with name and other details for confirmation */\r\n    let reserved: Object[] = [];\r\n    let passCount: any = 0;\r\n    for (let i: number = 1; i <= 3; i++) {\r\n        let name: any = document.getElementById('pass_name' + i);\r\n        let berthSelected: any = document.getElementById('pass_berth' + i);\r\n        let gender: any = document.getElementById('pass_gender' + i);\r\n        if (name.value !== '') {\r\n            let details: any = [];\r\n            let berth: string = berthSelected.value;\r\n            details.TrainNo = selectedTrain.TrainNo.toString();\r\n            details.PassName = name.value;\r\n            details.Gender = gender.value;\r\n            details.Berth = (berth === '') ? 'Any' : berth;\r\n            reserved.push(details);\r\n            passCount++;\r\n        }\r\n        let calcFare: any = 0;\r\n        for (let i: number = 0; i < cities; i++) {\r\n            if (startPoint.value === cities[i].name) {\r\n                calcFare = calcFare + cities[i].fare;\r\n            }\r\n            if (endPoint.value === cities[i].name) {\r\n                calcFare = calcFare + cities[i].fare;\r\n            }\r\n        }\r\n        let displayAmt : any = document.getElementById('amount');\r\n        if (ticketType.value === 'Economy Class') {\r\n            displayAmt.innerText = 'Total payable amount: $' + passCount * (300 + calcFare);\r\n        } else if (ticketType.value === 'Business Class') {\r\n            displayAmt.innerText = 'Total payable amount: $' + passCount * (500 + calcFare);\r\n        } else if (ticketType.value === 'Common Class') {\r\n            displayAmt.innerText = 'Total payable amount: $' + passCount * (150 + calcFare);\r\n        }\r\n    }\r\n    ticketDetailGrid.dataSource = reserved;\r\n}\r\nfunction trainSelected(args: RowSelectEventArgs): void {\r\n    selectedTrain = args.data;\r\n}\r\n\r\n\r\n    \r\n    renderComponents();\r\n\r\n// tslint:enable:max-line-length\r\n"}
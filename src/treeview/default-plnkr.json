{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\nimport { TreeView } from '@syncfusion/ej2-navigations';\n\n/**\n * TreeView default functionalities sample\n */\n\n    // Hierarchical data source for TreeView component\n    let hierarchicalData: { [key: string]: Object }[] = [\n        { id: '01', name: 'Local Disk (C:)', expanded: true,\n            subChild: [\n                {\n                    id: '01-01', name: 'Program Files',\n                    subChild: [\n                        { id: '01-01-01', name: 'Windows NT' },\n                        { id: '01-01-02', name: 'Windows Mail' },\n                        { id: '01-01-03', name: 'Windows Photo Viewer' },\n                    ]\n                },\n                {\n                    id: '01-02', name: 'Users', expanded: true,\n                    subChild: [\n                        { id: '01-02-01', name: 'Smith' },\n                        { id: '01-02-02', name: 'Public' },\n                        { id: '01-02-03', name: 'Admin' },\n                    ]\n                },\n                {\n                    id: '01-03', name: 'Windows',\n                    subChild: [\n                        { id: '01-03-01', name: 'Boot' },\n                        { id: '01-03-02', name: 'FileManager' },\n                        { id: '01-03-03', name: 'System32' },\n                    ]\n                },\n            ]\n        },\n        {\n            id: '02', name: 'Local Disk (D:)',\n            subChild: [\n                {\n                    id: '02-01', name: 'Personals',\n                    subChild: [\n                        { id: '02-01-01', name: 'My photo.png' },\n                        { id: '02-01-02', name: 'Rental document.docx' },\n                        { id: '02-01-03', name: 'Pay slip.pdf' },\n                    ]\n                },\n                {\n                    id: '02-02', name: 'Projects',\n                    subChild: [\n                        { id: '02-02-01', name: 'ASP Application' },\n                        { id: '02-02-02', name: 'TypeScript Application' },\n                        { id: '02-02-03', name: 'React Application' },\n                    ]\n                },\n                {\n                    id: '02-03', name: 'Office',\n                    subChild: [\n                        { id: '02-03-01', name: 'Work details.docx' },\n                        { id: '02-03-02', name: 'Weekly report.docx' },\n                        { id: '02-03-03', name: 'Wish list.csv' },\n                    ]\n                },\n            ]\n        },\n        {\n            id: '03', name: 'Local Disk (E:)', icon: 'folder',\n            subChild: [\n                {\n                    id: '03-01', name: 'Pictures',\n                    subChild: [\n                        { id: '03-01-01', name: 'Wind.jpg' },\n                        { id: '03-01-02', name: 'Stone.jpg' },\n                        { id: '03-01-03', name: 'Home.jpg' },\n                    ]\n                },\n                {\n                    id: '03-02', name: 'Documents',\n                        subChild: [\n                        { id: '03-02-01', name: 'Environment Pollution.docx' },\n                        { id: '03-02-02', name: 'Global Warming.ppt' },\n                        { id: '03-02-03', name: 'Social Network.pdf' },\n                    ]\n                },\n                {\n                    id: '03-03', name: 'Study Materials',\n                    subChild: [\n                        { id: '03-03-01', name: 'UI-Guide.pdf' },\n                        { id: '03-03-02', name: 'Tutorials.zip' },\n                        { id: '03-03-03', name: 'TypeScript.7z' },\n                    ]\n                },\n            ]\n        }\n    ];\n\n    // Render the TreeView by mapping its fields property with data source properties\n    let treeObj: TreeView = new TreeView({\n        fields: { dataSource: hierarchicalData, id: 'id', text: 'name', child: 'subChild' }\n    });\n    treeObj.appendTo('#tree');\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/production/demos/styles/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"col-lg-12 control-section\">\n    <div class=\"control_wrapper\">\n        <!-- Initialize TreeView -->\n        <div id=\"tree\"></div>\n    </div>\n</div>\n<style>\n    .control_wrapper {\n        max-width: 500px;\n        margin: auto;\n        border: 1px solid #dddddd;\n        border-radius: 3px;\n    }\n</style>\n\n\n\n\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
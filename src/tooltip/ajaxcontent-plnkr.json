{"src/tooltip/tooltipdata.json":"ï»¿[\n    {\n        \"Id\": \"1\",\n        \"Country\": \"Australia\",\n        \"Sports\": \"Cricket\"\n    },\n    {\n        \"Id\": \"2\",\n        \"Country\": \"Bhutan\",\n        \"Sports\": \"Archery\"\n    },\n    {\n        \"Id\": \"3\",\n        \"Country\": \"China\",\n        \"Sports\": \"Table tennis\"\n    },\n    {\n        \"Id\": \"4\",\n        \"Country\": \"Cuba\",\n        \"Sports\": \"Baseball\"\n    },\n    {\n        \"Id\": \"5\",\n        \"Country\": \"India\",\n        \"Sports\": \"Hockey\"\n    },\n    {\n        \"Id\": \"6\",\n        \"Country\": \"Switzerland\",\n        \"Sports\": \"Shooting\"\n    },\n    {\n        \"Id\": \"7\",\n        \"Country\": \"United States\",\n        \"Sports\": \"Baseball\"\n    }\n]","index.ts":"import { Tooltip, TooltipEventArgs } from '@syncfusion/ej2-popups';\nimport { Ajax } from '@syncfusion/ej2-base';\nimport { ListView } from '@syncfusion/ej2-lists';\n\n/**\n * loading ajax content sample\n */\n\n\n    let listObj: ListView = new ListView({\n        dataSource: [\n            { id: 1, text: 'Australia' },\n            { id: 2, text: 'Bhutan' },\n            { id: 3, text: 'China' },\n            { id: 4, text: 'Cuba' },\n            { id: 5, text: 'India' },\n            { id: 6, text: 'Switzerland' },\n            { id: 7, text: 'United States' }\n        ],\n        fields: { text: 'text', tooltip: 'id' }\n    });\n    listObj.appendTo('#countrylist');\n    let tooltip: Tooltip = new Tooltip({\n        content: 'Loading...',\n        target: '#countrylist [title]',\n        position: 'right center',\n        beforeRender: onBeforeRender\n    });\n    tooltip.appendTo('#Tooltip');\n\nfunction onBeforeRender(args: TooltipEventArgs): void {\n    this.content = 'Loading...';\n    this.dataBind();\n    let ajax: Ajax = new Ajax('./src/tooltip/tooltipdata.json', 'GET', true);\n    ajax.send().then(\n        (result: any) => {\n            result = JSON.parse(result);\n            for (let i: number = 0; i < result.length; i++) {\n                if (result[i].Id === args.target.getAttribute('data-content')) {\n                    /* tslint:disable */\n                    this.content = \"<div class='contentWrap'><img src='http://ej2.syncfusion.com/demos/src/tooltip/images/\"\n                        + result[i].Sports + \".png' class='logo' /><div class='def'>\" + result[i].Sports + \"</div></div>\";\n                    /* tslint:enable */\n                }\n            }\n            this.dataBind();\n        },\n        (reason: any) => {\n            this.content = reason.message;\n            this.dataBind();\n        });\n}","index.html":"<html><head>\n    <link href=\"http://ej2ci.syncfusion.com/production/demos/styles/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<style type=\"text/css\">\n    .contentWrap {\n        padding: 3px 0;\n        line-height: 16px;\n    }\n\n    .logo {\n        border: 0;\n        box-sizing: border-box;\n        padding-right: 6px;\n        height: 16px;\n        width: 22px;\n    }\n\n    .def {\n        float: right;\n    }\n\n    #countrylist {\n        border: 1px solid #dddddd;\n        border-radius: 3px;\n        width: 170px;\n        margin: 0 auto;\n    }\n\n    .list-header {\n        text-align: center;\n        color: rgba(0, 0, 0, 0.54);\n    }\n\n    @media (max-width: 481px) {\n        #countrylist {\n            margin: 0;\n        }\n\n        .list-header {\n            text-align: left;\n        }\n    }\n</style>\n<div class=\"col-lg-12 control-section\">\n    <h4 class=\"list-header\">National Sports</h4>\n    <div id=\"Tooltip\" class=\"e-prevent-select\">\n        <div id=\"countrylist\" tabindex=\"1\">\n        </div>\n    </div>\n</div>\n\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://ej2ci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",  \n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",      \n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\n\nSystem.import('index.ts').catch(console.error.bind(console));"}
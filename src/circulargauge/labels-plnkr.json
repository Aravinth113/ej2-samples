{"index.ts":"/**\n * Default sample\n */\nimport { CircularGauge, Annotations, Position, TickModel } from '@syncfusion/ej2-circulargauge';\nCircularGauge.Inject(Annotations);\n\n\n    let isMajorTicks: boolean = true;\n    let circulargauge: CircularGauge = new CircularGauge({\n        margin: {\n            left: 0, right: 0, top: 0, bottom: 0\n        },\n        axes: [{\n            annotations: [{\n                content: '<div id=\"content\" style=\"color:#518C03;font-size:20px;font-family:Segoe UI;font-weight:semibold;\">145</div>',\n                angle: 0, radius: '0%', zIndex: '1',\n            }],\n            startAngle: 210, endAngle: 150,\n            lineStyle: {\n                width: 2, color: '#9E9E9E'\n            },\n            labelStyle: {\n                position: 'Outside', autoAngle: true,\n                font: {\n                    size: '10px', color: '#333333'\n                }\n            }, majorTicks: {\n                position: 'Inside', color: '#757575', width: 2, height: 10, interval: 20\n            }, minorTicks: {\n                position: 'Inside', color: '#757575', height: 5, width: 2, interval: 10\n            },\n            radius: '75%', minimum: 0, maximum: 180,\n            ranges: [{\n                start: 0, end: 145,\n                color: '#8BC34A', radius: '60%'\n            }],\n            pointers: []\n        }]\n    });\n    circulargauge.appendTo('#labels-container');\n\n    document.getElementById('Ticks').onchange = () => {\n        let value: string = (<HTMLInputElement>document.getElementById('Ticks')).value;\n        let tick: TickModel; isMajorTicks = value === 'major';\n        if (isMajorTicks) {\n            tick = circulargauge.axes[0].majorTicks;\n        } else {\n            tick = circulargauge.axes[0].minorTicks;\n        }\n        (<HTMLInputElement>document.getElementById('tickposition')).value = tick.position;\n        (<HTMLInputElement>document.getElementById('tickOffset')).value = tick.offset.toString();\n        (<HTMLInputElement>document.getElementById('tickHeight')).value = tick.height.toString();\n        document.getElementById('offset').innerHTML = 'Tick Offset <span>&nbsp;&nbsp;&nbsp;' + tick.offset;\n        document.getElementById('height').innerHTML = 'Tick Height <span>&nbsp;&nbsp;&nbsp;' + tick.height;\n    };\n\n    document.getElementById('tickposition').onchange = () => {\n        let value: string = (<HTMLInputElement>document.getElementById('tickposition')).value;\n        if (isMajorTicks) {\n            circulargauge.axes[0].majorTicks.position = <Position>value;\n        } else {\n            circulargauge.axes[0].minorTicks.position = <Position>value;\n        }\n        circulargauge.refresh();\n    };\n\n    document.getElementById('labelposition').onchange = () => {\n        let value: string = (<HTMLInputElement>document.getElementById('labelposition')).value;\n        circulargauge.axes[0].labelStyle.position = <Position>value;\n        circulargauge.refresh();\n    };\n\n    document.getElementById('tickOffset').onpointermove = document.getElementById('tickOffset').ontouchmove =\n        document.getElementById('tickOffset').onchange = () => {\n            let value: number = parseInt((<HTMLInputElement>document.getElementById('tickOffset')).value, 10);\n            if (isMajorTicks) {\n                circulargauge.axes[0].majorTicks.offset = value;\n            } else {\n                circulargauge.axes[0].minorTicks.offset = value;\n            }\n            document.getElementById('offset').innerHTML = 'Tick Offset <span>&nbsp;&nbsp;&nbsp;' + value;\n            circulargauge.refresh();\n        };\n\n    document.getElementById('tickHeight').onpointermove = document.getElementById('tickHeight').ontouchmove =\n        document.getElementById('tickHeight').onchange = () => {\n            let value: number = parseInt((<HTMLInputElement>document.getElementById('tickHeight')).value, 10);\n            if (isMajorTicks) {\n                circulargauge.axes[0].majorTicks.height = value;\n            } else {\n                circulargauge.axes[0].minorTicks.height = value;\n            }\n            document.getElementById('height').innerHTML = 'Tick Height <span>&nbsp;&nbsp;&nbsp;' + value;\n            circulargauge.refresh();\n        };\n\n    document.getElementById('labelOffset').onpointermove = document.getElementById('labelOffset').ontouchmove =\n        document.getElementById('labelOffset').onchange = () => {\n            let value: number = parseInt((<HTMLInputElement>document.getElementById('labelOffset')).value, 10);\n            circulargauge.axes[0].labelStyle.offset = value;\n            document.getElementById('labelOffsetValue').innerHTML = 'Label Offset <span>&nbsp;&nbsp;&nbsp;' + value;\n            circulargauge.refresh();\n        };\n\n","index.html":"<html><head>\n    <link href=\"http://npmci.syncfusion.com/production/demos/styles/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"labels-container\"></div>\n        </div>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        &#xA0;\n                &#xA0;\n                &#xA0;\n                &#xA0;\n                &#xA0;\n                &#xA0;\n            <br><table id=\"property\" title=\"Properties\" style=\"width: 100%; margin:10px\">\n            <tbody>\n                <tr>\n                    <td>\n                        <div> Ticks </div>\n                    </td>\n                    <td>\n                        <div>\n                            <select id=\"Ticks\" class=\"form-control\" style=\"width:90%\"> \n                            <option value=\"major\" selected=\"true\">Major Ticks</option>\n                            <option value=\"minor\">Minor Ticks</option>\n                        </select>\n                        </div>\n                    </td>\n                </tr><tr>\n                    <td>\n                        <div> Tick Position </div>\n                    </td>\n                    <td>\n                        <div>\n                            <select id=\"tickposition\" class=\"form-control\" style=\"width:90%\"> \n                            <option value=\"Inside\" selected=\"true\">Inside</option>\n                            <option value=\"Outside\">Outside</option>\n                        </select>\n                        </div>\n                    </td>\n                </tr><tr>\n                    <td>\n                        <div> Label Position </div>\n                    </td>\n                    <td>\n                        <div>\n                            <select id=\"labelposition\" class=\"form-control\" style=\"width:90%\"> \n                            <option value=\"Inside\">Inside</option>\n                            <option value=\"Outside\" selected=\"true\">Outside</option>\n                        </select>\n                        </div>\n                    </td>\n                </tr><tr>\n                    <td>\n                        <div id=\"offset\">Tick Offset <span>&#xA0;&#xA0;&#xA0;0</span> </div>\n                    </td>\n                    <td>\n                        <div>\n                            <input type=\"range\" id=\"tickOffset\" value=\"0\" min=\"0\" max=\"50\" style=\"width:90%\">\n                        </div>\n                    </td>\n                </tr><tr>\n                    <td>\n                        <div id=\"height\">Tick Height <span>&#xA0;&#xA0;&#xA0;10</span> </div>\n                    </td>\n                    <td>\n                        <div>\n                            <input type=\"range\" id=\"tickHeight\" value=\"10\" min=\"1\" max=\"50\" style=\"width:90%\">\n                        </div>\n                    </td>\n                </tr><tr>\n                    <td>\n                        <div id=\"labelOffsetValue\">Label Offset <span>&#xA0;&#xA0;&#xA0;0</span> </div>\n                    </td>\n                    <td>\n                        <div>\n                            <input type=\"range\" id=\"labelOffset\" value=\"0\" min=\"0\" max=\"50\" style=\"width:90%\">\n                        </div>\n                    </td>\n                </tr></tbody>\n            \n        </table>\n    </div>\n</div>\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
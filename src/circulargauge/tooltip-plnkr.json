{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\n/**\n * Tooltip sample\n */\nimport { CircularGauge, ITooltipRenderEventArgs } from '@syncfusion/ej2-circulargauge';\nimport { GaugeTooltip } from '@syncfusion/ej2-circulargauge';\nCircularGauge.Inject(GaugeTooltip);\n\n\n    let circulargauge: CircularGauge = new CircularGauge({\n        title: 'Tooltip Customization',\n        titleStyle: { size: '15px', color: 'grey' },\n        axes: [{\n            radius: '90%',\n            minimum: 0,\n            maximum: 120,\n            startAngle: 240,\n            endAngle: 120,\n            lineStyle: { width: 0 },\n            majorTicks: { color: 'white', offset: -5, height: 12 },\n            minorTicks: { width: 0 },\n            labelStyle: { useRangeColor: true, font: { color: '#424242', size: '13px', fontFamily: 'Roboto' } },\n            pointers: [{\n                value: 70,\n                radius: '60%',\n                color: '#33BCBD',\n                cap: { radius: 10, border: { color: '#33BCBD', width: 5 } },\n                animation: { enable: true, duration: 1500 }\n            }],\n            ranges: [{\n                start: 0,\n                end: 50,\n                startWidth: 10, endWidth: 10,\n                radius: '102%',\n                color: '#3A5DC8',\n            }, {\n                start: 50,\n                end: 120,\n                radius: '102%',\n                startWidth: 10, endWidth: 10,\n                color: '#33BCBD',\n            }]\n        }],\n        tooltip: {\n            enable: true,\n            template: '#gauge-tooltip', border: {\n                color: '#33BCBD',\n                width: 2\n            }\n        },\n        tooltipRender: (args: ITooltipRenderEventArgs) => {\n            let color: string;\n            let value: number = args.pointer.currentValue;\n            let content: HTMLElement = <HTMLElement>args.content;\n            if (value >= 0 && value <= 50) {\n                color = '#3A5DC8'; content.children[1].remove();\n            } else {\n                color = '#33BCBD'; content.children[0].remove();\n            }\n            args.textStyle.color = color; args.border.color = color;\n            circulargauge.axes[0].pointers[0].animation.enable = false;\n            circulargauge.axes[0].pointers[0].color = color;\n            circulargauge.axes[0].pointers[0].cap.border.color = color;\n            circulargauge.setPointerValue(0, 0, value);\n        },\n        enablePointerDrag: true\n    });\n    circulargauge.appendTo('#tooltip-container');\n\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<style>\n    #templateWrap img {\n        border-radius: 30px;\n        width: 30px;\n        height: 30px;\n        margin: 0 auto;\n    }\n\n    #templateWrap .des {\n        float: right;\n        padding-left: 10px;\n        line-height: 30px;\n    }\n</style>\n<script id=\"gauge-tooltip\" type=\"text/x-template\">\n    <div id='templateWrap'>\n        <img src=\"http://npmci.syncfusion.com/production/demos/src/circulargauge/images/range1.png\" />\n        <img src=\"http://npmci.syncfusion.com/production/demos/src/circulargauge/images/range3.png\" />\n        <div class='des'>\n            <span>${Math.round(pointers[0].value)} MPH</span>\n        </div>\n    </div>\n</script>\n<div class=\"control-section\">\n    <div id=\"tooltip-container\"></div>\n</div>\n\n\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
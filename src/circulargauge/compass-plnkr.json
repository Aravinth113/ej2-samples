{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\n/**\n * Default sample\n */\nimport { CircularGauge, IAxisLabelRenderEventArgs } from '@syncfusion/ej2-circulargauge';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n\n    let value: string[] = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW', ''];\n    let pointerColor: DropDownList; let labelColor: DropDownList;\n    let circulargauge: CircularGauge = new CircularGauge({\n        axisLabelRender: (args: IAxisLabelRenderEventArgs) => {\n            args.text = value[args.value];\n        },\n        axes: [{\n            radius: '70%',\n            lineStyle: { width: 10, color: '#E0E0E0' },\n            labelStyle: {\n                font: {\n                    size: '12px', color: '#333333', fontFamily: 'Roboto'\n                },\n                useRangeColor: true,\n                autoAngle: true,\n                hiddenLabel: 'Last'\n            }, majorTicks: {\n                height: 15,\n                interval: 1,\n                color: '#9E9E9E'\n            }, minorTicks: {\n                height: 10,\n                interval: 0.5,\n                color: '#9E9E9E'\n            },\n            startAngle: 0,\n            endAngle: 360,\n            minimum: 0,\n            maximum: 8,\n            ranges: [{\n                start: 7,\n                end: 7,\n                color: '#f03e3e'\n            }],\n            pointers: [{\n                value: 7,\n                radius: '50%',\n                color: '#f03e3e',\n                pointerWidth: 20,\n                cap: {\n                    radius: 0\n                },\n                animation: { enable: false }\n            }, {\n                value: 3,\n                radius: '50%',\n                color: '#9E9E9E',\n                pointerWidth: 20,\n                cap: {\n                    radius: 0\n                },\n                animation: { enable: false }\n            }]\n        }]\n    });\n    circulargauge.appendTo('#direction-container');\n\n    pointerColor = new DropDownList({\n        index: 0,\n        placeholder: 'Select Range Bar Color',\n        width: 100,\n        change: () => {\n            let rangeColor: string = pointerColor.value.toString();\n            circulargauge.axes[0].pointers[0].color = rangeColor;\n            circulargauge.refresh();\n        }\n    });\n    pointerColor.appendTo('#poiterColor');\n\n    labelColor = new DropDownList({\n        index: 0,\n        placeholder: 'Select Range Bar Color',\n        width: 100,\n        change: () => {\n            let rangeColor: string = labelColor.value.toString();\n            circulargauge.axes[0].ranges[0].color = rangeColor;\n            circulargauge.refresh();\n        }\n    });\n    labelColor.appendTo('#labelColor');\n\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div>\n    <div class=\"col-md-8 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"direction-container\"></div>\n        </div>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr style=\"height: 50px\">\n                <td>\n                    <div id=\"\">Pointer Color</div>\n                </td>\n                <td>\n                    <div>\n                        <select id=\"poiterColor\" class=\"form-control\" style=\"width:90%\"> \n                            <option value=\"#f03e3e\" selected=\"true\">#f03e3e</option>\n                            <option value=\"#4472c4\">#4472c4</option>\n                            <option value=\"#ed7d31\">#ed7d31</option>\n                        </select>\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 50px\">\n                <td>\n                    <div id=\"\">Label Color</div>\n                </td>\n                <td>\n                    <div>\n                        <select id=\"labelColor\" class=\"form-control\" style=\"width:90%\"> \n                            <option value=\"#f03e3e\" selected=\"true\">#f03e3e</option>\n                            <option value=\"#4472c4\">#4472c4</option>\n                            <option value=\"#ed7d31\">#ed7d31</option>\n                        </select>\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf\": \"syncfusion:ej2-pdf/dist/ej2-pdf.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\n/**\n * AutoComplete Custom Filtering Sample\n */\nimport { AutoComplete, FilteringEventArgs } from '@syncfusion/ej2-dropdowns';\nimport * as Fuse from 'fuse.js';\n\n\n    let booksData: { [key: string]: Object; }[] = [\n        { BookName: 'Support Vector Machines Succinctly', BookID: 'BOOK1' }, { BookName: 'Scala Succinctly', BookID: 'BOOK2' },\n        { BookName: 'Application Security in .NET Succinctly', BookID: 'BOOK3' },\n        { BookName: 'ASP.NET WebHooks Succinctly', BookID: 'BOOK4' },\n        { BookName: 'Xamarin.Forms Succinctly', BookID: 'BOOK5' }, { BookName: 'Asynchronous Programming Succinctly', BookID: 'BOOK6' },\n        { BookName: 'Java Succinctly Part 2', BookID: 'BOOK7' }, { BookName: 'Java Succinctly Part 1', BookID: 'BOOK8' },\n        { BookName: 'PHP Succinctly', BookID: 'BOOK9' }, { BookName: 'Bing Maps V8 Succinctly', BookID: 'BOOK10' },\n        { BookName: 'WPF Debugging and Performance Succinctly', BookID: 'BOOK11' },\n        { BookName: 'Go Web Development Succinctly', BookID: 'BOOK12' },\n        { BookName: 'Go Succinctly', BookID: 'BOOK13' }, { BookName: 'More UWP Succinctly', BookID: 'BOOK14' },\n        { BookName: 'UWP Succinctly', BookID: 'BOOK15' }, { BookName: 'LINQPad Succinctly', BookID: 'BOOK16' },\n        { BookName: 'MongoDB 3 Succinctly', BookID: 'BOOK17' }, { BookName: 'R Programming Succinctly', BookID: 'BOOK18' },\n        { BookName: 'Azure Cosmos DB and DocumentDB Succinctly', BookID: 'BOOK19' },\n        { BookName: 'Unity Game Development Succinctly', BookID: 'BOOK20' },\n        { BookName: 'Aurelia Succinctly', BookID: 'BOOK21' }, { BookName: 'Microsoft Bot Framework Succinctly', BookID: 'BOOK22' },\n        { BookName: 'ASP.NET Core Succinctly', BookID: 'BOOK23' }, { BookName: 'Twilio with C# Succinctly', BookID: 'BOOK24' },\n        { BookName: 'Angular 2 Succinctly', BookID: 'BOOK25' }, { BookName: 'Visual Studio 2017 Succinctly', BookID: 'BOOK26' },\n        { BookName: 'Camtasia Succinctly', BookID: 'BOOK27' }, { BookName: 'SQL Queries Succinctly', BookID: 'BOOK28' },\n        { BookName: 'Keystone.js Succinctly', BookID: 'BOOK29' }, { BookName: 'Groovy Succinctly', BookID: 'BOOK30' },\n        { BookName: 'SQL Server for C# Developers Succinctly', BookID: 'BOOK31' },\n        { BookName: 'Ubuntu Server Succinctly', BookID: 'BOOK32' },\n        { BookName: 'Statistics Fundamentals Succinctly', BookID: 'BOOK33' }, { BookName: '.NET Core Succinctly', BookID: 'BOOK34' },\n        { BookName: 'SOLID Principles Succinctly', BookID: 'BOOK35' }, { BookName: 'Node.js Succinctly', BookID: 'BOOK36' },\n        { BookName: 'Customer Success for C# Developers Succinctly', BookID: 'BOOK37' },\n        { BookName: 'Data Capture and Extraction with C# Succinctly', BookID: 'BOOK38' },\n        { BookName: 'Hadoop Succinctly', BookID: 'BOOK39' }, { BookName: 'SciPy Programming Succinctly', BookID: 'BOOK40' },\n        { BookName: 'Hive Succinctly', BookID: 'BOOK41' }, { BookName: 'React.js Succinctly', BookID: 'BOOK42' },\n        { BookName: 'ECMAScript 6 Succinctly', BookID: 'BOOK43' }, { BookName: 'GitHub Succinctly', BookID: 'BOOK44' },\n        { BookName: 'Gulp Succinctly', BookID: 'BOOK45' }, { BookName: 'Visual Studio Code Succinctly', BookID: 'BOOK46' },\n        { BookName: 'Object-Oriented Programming in C# Succinctly', BookID: 'BOOK47' },\n        { BookName: 'C# Code Contracts Succinctly', BookID: 'BOOK48' },\n        { BookName: 'Leaflet.js Succinctly', BookID: 'BOOK49' }, { BookName: 'Delphi Succinctly', BookID: 'BOOK50' },\n        { BookName: 'SQL on Azure Succinctly', BookID: 'BOOK51' }, { BookName: 'Web Servers Succinctly', BookID: 'BOOK52' },\n        { BookName: 'ASP.NET Multitenant Applications Succinctly', BookID: 'BOOK53' },\n        { BookName: 'ASP.NET MVC Succinctly', BookID: 'BOOK54' },\n        { BookName: 'Windows Azure Websites Succinctly', BookID: 'BOOK55' },\n        { BookName: 'Localization for .NET Succinctly', BookID: 'BOOK56' },\n        { BookName: 'ASP.NET Web API Succinctly', BookID: 'BOOK57' },\n        { BookName: 'ASP.NET MVC 4 Mobile Websites Succinctly', BookID: 'BOOK58' },\n        { BookName: 'jQuery Succinctly', BookID: 'BOOK59' }, { BookName: 'JavaScript Succinctly', BookID: 'BOOK60' },\n    ];\n    // initialize AutoComplete component\n    let atcObj: AutoComplete = new AutoComplete({\n        //set the data to dataSource property\n        dataSource: booksData,\n        // maps the appropriate column to fields property\n        fields: { value: 'BookName' },\n        // set placeholder to AutoComplete input element\n        placeholder: 'e.g. Node.js Succinctly',\n        //Bind the filter event\n        filtering: (e: FilteringEventArgs) => {\n            let options: Object = {\n                keys: ['BookName'],\n                includeMatches: true,\n                findAllMatches: true\n            };\n            // create object from Fuse constructor\n            let fuse: Fuse = new Fuse(booksData, options);\n            // store the search result data based on typed characters\n            let result: any = fuse.search(e.text);\n            let data: { [key: string]: Object; }[] = [];\n            for (let i: number = 0; i < result.length; i++) {\n                data.push(result[i].item as any);\n            }\n            // pass the filter data source to updateData method.\n            e.updateData(data, null);\n            let popupElement: HTMLElement = document.getElementById('books_popup');\n            let lists: Element[] = <NodeListOf<Element> & Element[]>popupElement.querySelectorAll('.e-list-item');\n            // For highlight the typed characters, pass the result data and list items to highlightSearch method.\n            highlightSearch(lists, result);\n        }\n    });\n    atcObj.appendTo('#books');\n\n    function highlightSearch(listItems: Element[], result: any): void {\n        if (result.length > 0) {\n            for (let i: number = 0; i < listItems.length; i++) {\n                let innerHTML: string = listItems[i].innerHTML;\n                for (let j: number = result[i].matches[0].indices.length - 1; j >= 0; j--) {\n                    let indexes: number[] = <number[]>result[i].matches[0].indices[j];\n                    innerHTML = innerHTML.substring(0, indexes[0]) + '<span class=\"e-highlight\">' +\n                        innerHTML.substring(indexes[0], (indexes[1] + 1)) + '</span>' + innerHTML.substring(indexes[1] + 1);\n                    listItems[i].innerHTML = innerHTML;\n                }\n            }\n        }\n    }\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/production/demos/styles/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"col-lg-12 control-section\" style=\"height: 400px;\">\n    <div class=\"control-wrapper\">\n        <div style=\"padding-top:70px;\">\n            <input type=\"text\" tabindex=\"1\" id=\"books\">\n        </div>\n    </div>\n</div>\n\n\n\n\n\n<style>\n    .control-wrapper {\n        margin: 0 auto;\n        width: 300px;\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\",\n        \"@syncfusion/ej2-excel-export\": \"syncfusion:ej2-excel-export/dist/ej2-excel-export.umd.min.js\",\n        \"@syncfusion/ej2-pdf-export\": \"syncfusion:ej2-pdf-export/dist/ej2-pdf-export.umd.min.js\",\n        \"@syncfusion/ej2-compression\": \"syncfusion:ej2-compression/dist/ej2-compression.umd.min.js\",\n        \"@syncfusion/ej2-file-utils\": \"syncfusion:ej2-file-utils/dist/ej2-file-utils.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}
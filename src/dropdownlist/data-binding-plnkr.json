{"index.ts":"import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\n/**\n * DropDownList Remote Data & Local Data Samples\n */\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { Query, DataManager, ODataV4Adaptor } from '@syncfusion/ej2-data';\n\n\n\n\n    let gameList: { [key: string]: Object }[] = [\n        { id: 'Game1', game: 'American Football' },\n        { id: 'Game2', game: 'Badminton' },\n        { id: 'Game3', game: 'Basketball' },\n        { id: 'Game4', game: 'Cricket' },\n        { id: 'Game5', game: 'Football' },\n        { id: 'Game6', game: 'Golf' },\n        { id: 'Game7', game: 'Hockey' },\n        { id: 'Game8', game: 'Rugby' },\n        { id: 'Game9', game: 'Snooker' },\n        { id: 'Game10', game: 'Tennis' },\n    ];\n\n    let dropDownListObj: DropDownList = new DropDownList({\n        dataSource: new DataManager({\n            url: 'http://services.odata.org/V4/Northwind/Northwind.svc/Customers',\n            adaptor: new ODataV4Adaptor,\n            crossDomain: true\n        }),\n        query: new Query().select(['ContactName', 'CustomerID']).take(25),\n        fields: { text: 'ContactName', value: 'CustomerID' },\n        placeholder: 'Select a customer',\n        sortOrder: 'Ascending',\n        popupHeight: '200px',\n        actionBegin: () => {\n            let element: HTMLElement[] = <HTMLElement[] & NodeListOf<Element>>\n                document.querySelector('.control-section').querySelectorAll('.e-input-group-icon');\n            element[1].classList.add('e-spinner-icon');\n            element[1].classList.remove('e-ddl-icon', 'e-search-icon');\n        },\n        actionComplete: () => {\n            removeIcon();\n        },\n        actionFailure: () => {\n            removeIcon();\n        }\n    });\n    dropDownListObj.appendTo('#customers');\n\n    let games: DropDownList = new DropDownList({\n        dataSource: gameList,\n        fields: { text: 'game' },\n        placeholder: 'Select a game',\n        popupHeight: '200px'\n    });\n    games.appendTo('#games');\n    function removeIcon(): void {\n        let element: HTMLElement[] = <HTMLElement[] & NodeListOf<Element>>\n            document.querySelector('.control-section').querySelectorAll('.e-input-group-icon');\n        element[1].classList.add('e-ddl-icon', 'e-search-icon');\n        element[1].classList.remove('e-spinner-icon');\n    }\n","index.html":"<!DOCTYPE html><html><head>\n    <link href=\"http://npmci.syncfusion.com/packages/production/material.css\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.38/system.js\"></script>\n    <script src=\"systemjs.config.js\"></script>\n</head>\n<body>\n<div class=\"control-section col-lg-12\">\n    <div id=\"local-data\" class=\"col-lg-6\" style=\"padding-top:15px\">\n        <div class=\"content\">\n            <h4> Local Data</h4>\n            <input type=\"text\" id=\"games\">\n        </div>\n    </div>\n    <div id=\"remote-data\" class=\"col-lg-6\" style=\"padding-top:15px\">\n        <div class=\"content\">\n            <h4>Remote Data</h4>\n            <input type=\"text\" id=\"customers\">\n        </div>\n    </div>\n</div>\n\n\n\n<style>\n    .content {\n        margin: 0 auto;\n        width: 250px;\n    }\n\n    .e-input-group .e-input-group-icon.e-spinner-icon {\n        background-image: url(./styles/images/Medium-36px-spin.gif) !important;\n        background-size: 12px 12px !important;\n        background-repeat: no-repeat !important;\n        background-position: center center !important;\n        top: -2px;\n    }\n\n    .e-input-group .e-spinner-icon.e-input-group-icon:active {\n        background: transparent;\n    }\n\n    .e-input-group.e-ddl .e-input-group-icon.e-spinner-icon {\n        border: none;\n    }\n</style>\n\n</body></html>","systemjs.config.js":"System.config({\n    transpiler: \"typescript\",\n    typescriptOptions: {\n        compilerOptions: {\n            target: \"umd\",\n            module: \"commonjs\",\n            moduleResolution: \"node\",\n            emitDecoratorMetadata: true,\n            experimentalDecorators: true\n        }\n    },\n    paths: {\n        \"syncfusion:\": \"http://npmci.syncfusion.com/packages/production/\"\n    },\n    map: {\n        main: \"index.ts\",\n        typescript: \"https://unpkg.com/typescript@2.2.2/lib/typescript.js\",\n        'plugin-json':'https://cdnjs.cloudflare.com/ajax/libs/systemjs-plugin-json/0.3.0/json.min.js',\n        \"@syncfusion/ej2-base\": \"syncfusion:ej2-base/dist/ej2-base.umd.min.js\",\n        \"@syncfusion/ej2-buttons\": \"syncfusion:ej2-buttons/dist/ej2-buttons.umd.min.js\",\n        \"@syncfusion/ej2-calendars\": \"syncfusion:ej2-calendars/dist/ej2-calendars.umd.min.js\",\n        \"@syncfusion/ej2-charts\": \"syncfusion:ej2-charts/dist/ej2-charts.umd.min.js\",\n        \"@syncfusion/ej2-circulargauge\": \"syncfusion:ej2-circulargauge/dist/ej2-circulargauge.umd.min.js\",\n        \"@syncfusion/ej2-lineargauge\": \"syncfusion:ej2-lineargauge/dist/ej2-lineargauge.umd.min.js\",\n        \"@syncfusion/ej2-data\": \"syncfusion:ej2-data/dist/ej2-data.umd.min.js\",\n        \"@syncfusion/ej2-dropdowns\": \"syncfusion:ej2-dropdowns/dist/ej2-dropdowns.umd.min.js\",\n        \"@syncfusion/ej2-grids\": \"syncfusion:ej2-grids/dist/ej2-grids.umd.min.js\",        \n        \"@syncfusion/ej2-inputs\": \"syncfusion:ej2-inputs/dist/ej2-inputs.umd.min.js\",        \n        \"@syncfusion/ej2-lists\": \"syncfusion:ej2-lists/dist/ej2-lists.umd.min.js\",\n        \"@syncfusion/ej2-navigations\": \"syncfusion:ej2-navigations/dist/ej2-navigations.umd.min.js\",        \n        \"@syncfusion/ej2-popups\": \"syncfusion:ej2-popups/dist/ej2-popups.umd.min.js\"\n    },\n     meta: { \n       '*.json': { loader: 'plugin-json' }\n    }\n});\nSystem.import('index.ts').catch(console.error.bind(console));"}